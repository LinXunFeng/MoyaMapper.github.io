{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MoyaMapper\u662f\u57fa\u4e8eMoya\u548cSwiftyJSON\u5c01\u88c5\u7684\u5de5\u5177\uff0c\u4ee5Moya\u7684plugin\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u95f4\u63a5\u89e3\u6790\uff0c\u652f\u6301RxSwift Feature \u00b6 \u652f\u6301 json \u8f6c Model \u81ea\u52a8\u6620\u5c04 \u4e0e \u81ea\u5b9a\u4e49\u6620\u5c04 \u65e0\u89c6 json \u4e2d\u503c\u7684\u7c7b\u578b\uff0c Model \u4e2d\u5c5e\u6027\u58f0\u660e\u7684\u662f\u4ec0\u4e48\u7c7b\u578b\uff0c\u5b83\u5c31\u662f\u4ec0\u4e48\u7c7b\u578b \u652f\u6301 json\u5b57\u7b26\u4e32 \u8f6c Model \u652f\u6301\u5b9a\u4e49\u9ed8\u8ba4\u503c\u7b56\u7565\u3001\u89e3\u6790\u7b56\u7565 \u63d2\u4ef6\u65b9\u5f0f\uff0c\u5168\u65b9\u4f4d\u4fdd\u969c Moya.Response \uff0c\u62d2\u7edd\u5404\u79cd\u7f51\u7edc\u95ee\u9898\u5bfc\u81f4 Response \u4e3a nil Optional - \u652f\u6301\u6570\u636e\u968f\u610f\u7f13\u5b58( JSON \u3001 Number \u3001 String \u3001 Bool \u3001 Moya.Response ) Optional - \u652f\u6301\u7f51\u7edc\u8bf7\u6c42\u7f13\u5b58 CocoaPods \u00b6 \u9ed8\u8ba4\u5b89\u88c5 MoyaMapper\u9ed8\u8ba4\u53ea\u5b89\u88c5Core\u4e0b\u7684\u6587\u4ef6 pod 'MoyaMapper' RxSwift\u62d3\u5c55 pod 'MoyaMapper/Rx' \u7f13\u5b58\u62d3\u5c55 pod 'MoyaMapper/MMCache' Rx\u7f13\u5b58 pod 'MoyaMapper/RxCache' Carthage \u00b6 \u5728\u4f60\u7684 Cartfile \u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9: github \"MoyaMapper/MoyaMapper\" \u63a5\u7740\u8fd0\u884c carthage update . Author \u00b6 LinXunFeng email: xunfenghellolo@gmail.com Blogs: LinXunFeng\u2018s Blog | \u6398\u91d1 | \u7b80\u4e66","title":"Home"},{"location":"#feature","text":"\u652f\u6301 json \u8f6c Model \u81ea\u52a8\u6620\u5c04 \u4e0e \u81ea\u5b9a\u4e49\u6620\u5c04 \u65e0\u89c6 json \u4e2d\u503c\u7684\u7c7b\u578b\uff0c Model \u4e2d\u5c5e\u6027\u58f0\u660e\u7684\u662f\u4ec0\u4e48\u7c7b\u578b\uff0c\u5b83\u5c31\u662f\u4ec0\u4e48\u7c7b\u578b \u652f\u6301 json\u5b57\u7b26\u4e32 \u8f6c Model \u652f\u6301\u5b9a\u4e49\u9ed8\u8ba4\u503c\u7b56\u7565\u3001\u89e3\u6790\u7b56\u7565 \u63d2\u4ef6\u65b9\u5f0f\uff0c\u5168\u65b9\u4f4d\u4fdd\u969c Moya.Response \uff0c\u62d2\u7edd\u5404\u79cd\u7f51\u7edc\u95ee\u9898\u5bfc\u81f4 Response \u4e3a nil Optional - \u652f\u6301\u6570\u636e\u968f\u610f\u7f13\u5b58( JSON \u3001 Number \u3001 String \u3001 Bool \u3001 Moya.Response ) Optional - \u652f\u6301\u7f51\u7edc\u8bf7\u6c42\u7f13\u5b58","title":"Feature"},{"location":"#cocoapods","text":"\u9ed8\u8ba4\u5b89\u88c5 MoyaMapper\u9ed8\u8ba4\u53ea\u5b89\u88c5Core\u4e0b\u7684\u6587\u4ef6 pod 'MoyaMapper' RxSwift\u62d3\u5c55 pod 'MoyaMapper/Rx' \u7f13\u5b58\u62d3\u5c55 pod 'MoyaMapper/MMCache' Rx\u7f13\u5b58 pod 'MoyaMapper/RxCache'","title":"CocoaPods"},{"location":"#carthage","text":"\u5728\u4f60\u7684 Cartfile \u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9: github \"MoyaMapper/MoyaMapper\" \u63a5\u7740\u8fd0\u884c carthage update .","title":"Carthage"},{"location":"#author","text":"LinXunFeng email: xunfenghellolo@gmail.com Blogs: LinXunFeng\u2018s Blog | \u6398\u91d1 | \u7b80\u4e66","title":"Author"},{"location":"about/","text":"About \u00b6 \u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u95ee\u9898\uff0c\u6b22\u8fce\u968f\u65f6\u63d0\u4ea4 issues \uff0c\u5982\u679c MoyaMapper \u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\uff0c\u5e0c\u671b\u80fd\u7559\u4e0b\u4e00\u679a\u5b9d\u8d35\u7684 Star \uff0c\u611f\u8c22\u652f\u6301!!! \u4ed3\u5e93\u7ef4\u62a4\u8005\uff1a LinXunFeng email: 598600855@qq.com Blog: LinXunFeng\u2018s Blog | \u6398\u91d1 | \u7b80\u4e66","title":"About"},{"location":"about/#about","text":"\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u95ee\u9898\uff0c\u6b22\u8fce\u968f\u65f6\u63d0\u4ea4 issues \uff0c\u5982\u679c MoyaMapper \u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\uff0c\u5e0c\u671b\u80fd\u7559\u4e0b\u4e00\u679a\u5b9d\u8d35\u7684 Star \uff0c\u611f\u8c22\u652f\u6301!!! \u4ed3\u5e93\u7ef4\u62a4\u8005\uff1a LinXunFeng email: 598600855@qq.com Blog: LinXunFeng\u2018s Blog | \u6398\u91d1 | \u7b80\u4e66","title":"About"},{"location":"cache/","text":"MM-Cache \u00b6 \u57fa\u672c\u4f7f\u7528 \u00b6 // \u7f13\u5b58 @discardableResult MMCache.shared.cache`XXX`(value : XXX, key: String, cacheContainer: MMCache.CacheContainer = .RAM) -> Bool // \u53d6\u820d MMCache.shared.fetch`XXX`Cache(key: String, cacheContainer: MMCache.CacheContainer = .RAM) \u7f13\u5b58\u6210\u529f\u4f1a\u8fd4\u56de\u4e00\u4e2a Bool \u503c\uff0c\u8fd9\u91cc\u53ef\u4e0d\u63a5\u6536 XXX \u6240\u652f\u6301\u7c7b\u578b Bool - Float - Double - String - JSON - Modelable [Modelable] Moya.Response - Int UInt Int8 UInt8 Int16 UInt16 Int32 UInt32 Int64 UInt64 \u5176\u4e2d\uff0c\u9664\u4e86 Moya.Response \u4e4b\u5916\uff0c\u5176\u5b83\u7c7b\u578b\u7686\u662f\u901a\u8fc7 JSON \u6765\u5b9e\u73b0\u7f13\u5b58 \u6240\u4ee5\uff0c\u5982\u679c\u4f60\u60f3\u6e05\u9664\u8fd9\u4e9b\u7c7b\u578b\u7684\u7f13\u5b58\uff0c\u53ea\u9700\u8981\u8c03\u7528\u5982\u4e0b\u65b9\u6cd5\u5373\u53ef @ discardableResult func removeJSONCache ( _ key : String , cacheContainer : MMCache . CacheContainer = . RAM ) -> Bool @ discardableResult func removeAllJSONCache ( cacheContainer : MMCache . CacheContainer = . RAM ) -> Bool \u6e05\u9664 Moya.Response \u5219\u4f7f\u7528\u5982\u4e0b\u4e24\u4e2a\u65b9\u6cd5 @ discardableResult func removeResponseCache ( _ key : String ) -> Bool @ discardableResult func removeAllResponseCache () -> Bool \u9488\u5bf9\u9075\u5b88 Modelable \u7684 Model \uff0c MMCache \u63d0\u4f9b\u4e86\u989d\u5916\u4e24\u5957\u65b9\u6cd5\uff0c\u4e0b\u9762\u4ee5 MyModel \u4e3a\u4f8b struct MyModel : Modelable {} \u6a21\u578b // \u7f13\u5b58\u6a21\u578b @ discardableResult myModel . cache ( key : String , cacheContainer : MMCache . CacheContainer = . RAM ) -> Bool // \u53d6\u51fa\u6a21\u578b\u7f13\u5b58 MyModel . fromCache ( key : String , cacheContainer : MMCache . CacheContainer = . RAM ) -> MyModel ] \u6a21\u578b\u6570\u7ec4 // \u7f13\u5b58\u6a21\u578b\u6570\u7ec4 @ discardableResult myModels . cache ( key : String , cacheContainer : MMCache . CacheContainer = . RAM ) -> Bool // \u53d6\u51fa\u6a21\u578b\u6570\u7ec4\u7f13\u5b58 [ MyModel ]. fromCache ( key : String , cacheContainer : MMCache . CacheContainer = . RAM ) -> [ MyModel \u518d\u6765\u770b\u770bMMCache.CacheContainer enum CacheContainer { case RAM // \u53ea\u7f13\u5b58\u4e8e\u5185\u5b58\u7684\u5bb9\u5668 case hybrid // \u7f13\u5b58\u4e8e\u5185\u5b58\u4e0e\u78c1\u76d8\u7684\u5bb9\u5668 } \u8fd9\u4e24\u79cd\u5bb9\u5668\u4e92\u4e0d\u76f8\u901a\uff0c\u5373 \u5373\u4f7fkey\u76f8\u540c\uff0c\u4f7f\u7528 hybrid \u6765\u7f13\u5b58\u540e\uff0c\u518d\u901a\u8fc7 RAM \u53d6\u503c\u662f\u53d6\u4e0d\u5230\u7684\u3002 RAM : \u4ec5\u7f13\u5b58\u4e8e\u5185\u5b58\u4e4b\u4e2d\uff0c\u7f13\u5b58\u7684\u6570\u636e\u5728APP\u4f7f\u7528\u671f\u95f4\u4e00\u76f4\u5b58\u5728 hybrid \uff1a\u7f13\u5b58\u4e8e\u5185\u5b58\u4e0e\u78c1\u76d8\u4e2d\uff0cAPP\u91cd\u542f\u540e\u4e5f\u53ef\u4ee5\u83b7\u53d6\u5230\u6570\u636e \u7f13\u5b58\u7f51\u7edc\u8bf7\u6c42 \u00b6 \u5185\u90e8\u7f13\u5b58\u8fc7\u7a0b\uff1a APP\u9996\u6b21\u542f\u52a8\u5e76\u8fdb\u884c\u7f51\u7edc\u8bf7\u6c42\uff0c\u7f51\u7edc\u6570\u636e\u5c06\u7f13\u5b58\u8d77\u6765 APP\u518d\u6b21\u542f\u52a8\u5e76\u8fdb\u884c\u7f51\u7edc\u8bf7\u6c42\u65f6\uff0c\u4f1a\u5148\u52a0\u8f7d\u7f13\u5b58\uff0c\u518d\u52a0\u8f7d\u7f51\u7edc\u6570\u636e \u5176\u5b83\u60c5\u51b5\u53ea\u4f1a\u52a0\u8f7d\u7f51\u7edc\u6570\u636e \u6bcf\u6b21\u6210\u529f\u8bf7\u6c42\u5230\u6570\u636e\u90fd\u4f1a\u8fdb\u884c\u6570\u636e\u66f4\u65b0 // Normal func cacheRequest ( _ target : Target , cacheType : MMCache . CacheKeyType = . default , callbackQueue : DispatchQueue ? = nil , progress : Moya . ProgressBlock ? = nil , completion : @ escaping Moya . Completion ) -> Cancellable // Rx func cacheRequest ( _ target : Base . Target , callbackQueue : DispatchQueue ? = nil , cacheType : MMCache . CacheKeyType = . default ) -> Observable < Response > \u53ef\u5bf9 Moya \u8bf7\u6c42\u540e\u7684 Response \u8fdb\u884c\u7f13\u5b58\u3002 \u5176\u5b9e\u4e0e Moya \u81ea\u5e26\u7684\u65b9\u6cd5\u76f8\u6bd4\u8f83\u53ea\u591a\u4e86\u4e00\u4e2a\u53c2\u6570 cacheType: MMCache.CacheKeyType \uff0c\u5b9a\u4e49\u7740\u7f13\u5b58\u4e2d\u7684 key \uff0c\u9ed8\u8ba4\u4e3a default \u4e0b\u9762\u662f MMCache.CacheKeyType \u7684\u5b9a\u4e49 /** let cacheKey = [method]baseURL/path - default : cacheKey + \"?\" + parameters - base : cacheKey - custom : cacheKey + \"?\" + customKey */ public enum CacheKeyType { case `default` case base case custom(String) } \u5982\u679c\u4f60\u60f3\u7f13\u5b58 \u591a\u9875 \u5217\u8868\u6570\u636e\u7684 \u6700\u65b0\u4e00\u9875 \u7684\u6570\u636e\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 base \u6216\u8005 custom(String) \u6211\u4eec\u53ef\u4ee5\u6765\u8bd5\u4e00\u4e0b\u5e26\u7f13\u5b58\u7684\u8bf7\u6c42 /* * APP\u7b2c\u4e00\u6b21\u542f\u52a8\u5e76\u8fdb\u884c\u7f51\u7edc\u8bf7\u6c42\uff0c\u7f51\u7edc\u6570\u636e\u5c06\u7f13\u5b58\u8d77\u6765 * APP\u518d\u6b21\u542f\u52a8\u5e76\u8fdb\u884c\u7f51\u7edc\u8bf7\u6c42\u65f6\uff0c\u4f1a\u5148\u52a0\u8f7d\u7f13\u5b58\uff0c\u518d\u52a0\u8f7d\u7f51\u7edc\u6570\u636e * \u5176\u5b83\u60c5\u51b5\u53ea\u4f1a\u52a0\u8f7d\u7f51\u7edc\u6570\u636e * \u6bcf\u6b21\u6210\u529f\u8bf7\u6c42\u5230\u6570\u636e\u90fd\u4f1a\u8fdb\u884c\u6570\u636e\u66f4\u65b0 */ lxfNetTool . rx . cacheRequest (. data ( type : . all , size : 10 , index : 1 )) . subscribe ( onNext : { response in log . debug ( \"statusCode -- \\( response . statusCode ) \" ) log . debug ( \" ===== cache =====\" ) }). disposed ( by : disposeBag ) // \u4f20\u7edf\u65b9\u5f0f /* let _ = lxfNetTool.cacheRequest(.data(type: .all, size: 10, index: 1)) { result in guard let resp = result.value else { return } log.debug(\"statusCode -- \\(resp.statusCode)\") } */ \u6253\u5370\u7ed3\u679c // \u7b2c\u4e00\u6b21\u4f7f\u7528 statusCode -- 200 // \u5173\u95ed\u5e76\u91cd\u65b0\u6253\u5f00APP\uff0c\u518d\u8bf7\u6c42\u4e00\u4e0b statusCode -- 230 statusCode -- 200 // \u7136\u540e\u518d\u8bf7\u6c42\u4e00\u4e0b statusCode -- 200","title":"Cache"},{"location":"cache/#mm-cache","text":"","title":"MM-Cache"},{"location":"cache/#_1","text":"// \u7f13\u5b58 @discardableResult MMCache.shared.cache`XXX`(value : XXX, key: String, cacheContainer: MMCache.CacheContainer = .RAM) -> Bool // \u53d6\u820d MMCache.shared.fetch`XXX`Cache(key: String, cacheContainer: MMCache.CacheContainer = .RAM) \u7f13\u5b58\u6210\u529f\u4f1a\u8fd4\u56de\u4e00\u4e2a Bool \u503c\uff0c\u8fd9\u91cc\u53ef\u4e0d\u63a5\u6536 XXX \u6240\u652f\u6301\u7c7b\u578b Bool - Float - Double - String - JSON - Modelable [Modelable] Moya.Response - Int UInt Int8 UInt8 Int16 UInt16 Int32 UInt32 Int64 UInt64 \u5176\u4e2d\uff0c\u9664\u4e86 Moya.Response \u4e4b\u5916\uff0c\u5176\u5b83\u7c7b\u578b\u7686\u662f\u901a\u8fc7 JSON \u6765\u5b9e\u73b0\u7f13\u5b58 \u6240\u4ee5\uff0c\u5982\u679c\u4f60\u60f3\u6e05\u9664\u8fd9\u4e9b\u7c7b\u578b\u7684\u7f13\u5b58\uff0c\u53ea\u9700\u8981\u8c03\u7528\u5982\u4e0b\u65b9\u6cd5\u5373\u53ef @ discardableResult func removeJSONCache ( _ key : String , cacheContainer : MMCache . CacheContainer = . RAM ) -> Bool @ discardableResult func removeAllJSONCache ( cacheContainer : MMCache . CacheContainer = . RAM ) -> Bool \u6e05\u9664 Moya.Response \u5219\u4f7f\u7528\u5982\u4e0b\u4e24\u4e2a\u65b9\u6cd5 @ discardableResult func removeResponseCache ( _ key : String ) -> Bool @ discardableResult func removeAllResponseCache () -> Bool \u9488\u5bf9\u9075\u5b88 Modelable \u7684 Model \uff0c MMCache \u63d0\u4f9b\u4e86\u989d\u5916\u4e24\u5957\u65b9\u6cd5\uff0c\u4e0b\u9762\u4ee5 MyModel \u4e3a\u4f8b struct MyModel : Modelable {} \u6a21\u578b // \u7f13\u5b58\u6a21\u578b @ discardableResult myModel . cache ( key : String , cacheContainer : MMCache . CacheContainer = . RAM ) -> Bool // \u53d6\u51fa\u6a21\u578b\u7f13\u5b58 MyModel . fromCache ( key : String , cacheContainer : MMCache . CacheContainer = . RAM ) -> MyModel ] \u6a21\u578b\u6570\u7ec4 // \u7f13\u5b58\u6a21\u578b\u6570\u7ec4 @ discardableResult myModels . cache ( key : String , cacheContainer : MMCache . CacheContainer = . RAM ) -> Bool // \u53d6\u51fa\u6a21\u578b\u6570\u7ec4\u7f13\u5b58 [ MyModel ]. fromCache ( key : String , cacheContainer : MMCache . CacheContainer = . RAM ) -> [ MyModel \u518d\u6765\u770b\u770bMMCache.CacheContainer enum CacheContainer { case RAM // \u53ea\u7f13\u5b58\u4e8e\u5185\u5b58\u7684\u5bb9\u5668 case hybrid // \u7f13\u5b58\u4e8e\u5185\u5b58\u4e0e\u78c1\u76d8\u7684\u5bb9\u5668 } \u8fd9\u4e24\u79cd\u5bb9\u5668\u4e92\u4e0d\u76f8\u901a\uff0c\u5373 \u5373\u4f7fkey\u76f8\u540c\uff0c\u4f7f\u7528 hybrid \u6765\u7f13\u5b58\u540e\uff0c\u518d\u901a\u8fc7 RAM \u53d6\u503c\u662f\u53d6\u4e0d\u5230\u7684\u3002 RAM : \u4ec5\u7f13\u5b58\u4e8e\u5185\u5b58\u4e4b\u4e2d\uff0c\u7f13\u5b58\u7684\u6570\u636e\u5728APP\u4f7f\u7528\u671f\u95f4\u4e00\u76f4\u5b58\u5728 hybrid \uff1a\u7f13\u5b58\u4e8e\u5185\u5b58\u4e0e\u78c1\u76d8\u4e2d\uff0cAPP\u91cd\u542f\u540e\u4e5f\u53ef\u4ee5\u83b7\u53d6\u5230\u6570\u636e","title":"\u57fa\u672c\u4f7f\u7528"},{"location":"cache/#_2","text":"\u5185\u90e8\u7f13\u5b58\u8fc7\u7a0b\uff1a APP\u9996\u6b21\u542f\u52a8\u5e76\u8fdb\u884c\u7f51\u7edc\u8bf7\u6c42\uff0c\u7f51\u7edc\u6570\u636e\u5c06\u7f13\u5b58\u8d77\u6765 APP\u518d\u6b21\u542f\u52a8\u5e76\u8fdb\u884c\u7f51\u7edc\u8bf7\u6c42\u65f6\uff0c\u4f1a\u5148\u52a0\u8f7d\u7f13\u5b58\uff0c\u518d\u52a0\u8f7d\u7f51\u7edc\u6570\u636e \u5176\u5b83\u60c5\u51b5\u53ea\u4f1a\u52a0\u8f7d\u7f51\u7edc\u6570\u636e \u6bcf\u6b21\u6210\u529f\u8bf7\u6c42\u5230\u6570\u636e\u90fd\u4f1a\u8fdb\u884c\u6570\u636e\u66f4\u65b0 // Normal func cacheRequest ( _ target : Target , cacheType : MMCache . CacheKeyType = . default , callbackQueue : DispatchQueue ? = nil , progress : Moya . ProgressBlock ? = nil , completion : @ escaping Moya . Completion ) -> Cancellable // Rx func cacheRequest ( _ target : Base . Target , callbackQueue : DispatchQueue ? = nil , cacheType : MMCache . CacheKeyType = . default ) -> Observable < Response > \u53ef\u5bf9 Moya \u8bf7\u6c42\u540e\u7684 Response \u8fdb\u884c\u7f13\u5b58\u3002 \u5176\u5b9e\u4e0e Moya \u81ea\u5e26\u7684\u65b9\u6cd5\u76f8\u6bd4\u8f83\u53ea\u591a\u4e86\u4e00\u4e2a\u53c2\u6570 cacheType: MMCache.CacheKeyType \uff0c\u5b9a\u4e49\u7740\u7f13\u5b58\u4e2d\u7684 key \uff0c\u9ed8\u8ba4\u4e3a default \u4e0b\u9762\u662f MMCache.CacheKeyType \u7684\u5b9a\u4e49 /** let cacheKey = [method]baseURL/path - default : cacheKey + \"?\" + parameters - base : cacheKey - custom : cacheKey + \"?\" + customKey */ public enum CacheKeyType { case `default` case base case custom(String) } \u5982\u679c\u4f60\u60f3\u7f13\u5b58 \u591a\u9875 \u5217\u8868\u6570\u636e\u7684 \u6700\u65b0\u4e00\u9875 \u7684\u6570\u636e\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 base \u6216\u8005 custom(String) \u6211\u4eec\u53ef\u4ee5\u6765\u8bd5\u4e00\u4e0b\u5e26\u7f13\u5b58\u7684\u8bf7\u6c42 /* * APP\u7b2c\u4e00\u6b21\u542f\u52a8\u5e76\u8fdb\u884c\u7f51\u7edc\u8bf7\u6c42\uff0c\u7f51\u7edc\u6570\u636e\u5c06\u7f13\u5b58\u8d77\u6765 * APP\u518d\u6b21\u542f\u52a8\u5e76\u8fdb\u884c\u7f51\u7edc\u8bf7\u6c42\u65f6\uff0c\u4f1a\u5148\u52a0\u8f7d\u7f13\u5b58\uff0c\u518d\u52a0\u8f7d\u7f51\u7edc\u6570\u636e * \u5176\u5b83\u60c5\u51b5\u53ea\u4f1a\u52a0\u8f7d\u7f51\u7edc\u6570\u636e * \u6bcf\u6b21\u6210\u529f\u8bf7\u6c42\u5230\u6570\u636e\u90fd\u4f1a\u8fdb\u884c\u6570\u636e\u66f4\u65b0 */ lxfNetTool . rx . cacheRequest (. data ( type : . all , size : 10 , index : 1 )) . subscribe ( onNext : { response in log . debug ( \"statusCode -- \\( response . statusCode ) \" ) log . debug ( \" ===== cache =====\" ) }). disposed ( by : disposeBag ) // \u4f20\u7edf\u65b9\u5f0f /* let _ = lxfNetTool.cacheRequest(.data(type: .all, size: 10, index: 1)) { result in guard let resp = result.value else { return } log.debug(\"statusCode -- \\(resp.statusCode)\") } */ \u6253\u5370\u7ed3\u679c // \u7b2c\u4e00\u6b21\u4f7f\u7528 statusCode -- 200 // \u5173\u95ed\u5e76\u91cd\u65b0\u6253\u5f00APP\uff0c\u518d\u8bf7\u6c42\u4e00\u4e0b statusCode -- 230 statusCode -- 200 // \u7136\u540e\u518d\u8bf7\u6c42\u4e00\u4e0b statusCode -- 200","title":"\u7f13\u5b58\u7f51\u7edc\u8bf7\u6c42"},{"location":"model/","text":"Model \u00b6 \u4e00\u3001\u5b9a\u4e49Model \u00b6 \u652f\u6301\u6a21\u578b\u81ea\u52a8\u6620\u5c04\uff0c\u4e0d\u9700\u8981\u8003\u8651\u6e90json\u6570\u636e\u7684\u771f\u5b9e\u7c7b\u578b\uff0c\u8fd9\u91cc\u7edf\u4e00\u6309 Model \u4e2d\u5c5e\u6027\u58f0\u660e\u7684\u7c7b\u578b\u8fdb\u884c\u8f6c\u6362 \u4e00\u822c\u60c5\u51b5\u4e0b\u5982\u4e0b\u5199\u6cd5\u5373\u53ef struct CompanyModel : Modelable { var name : String = \"\" var catchPhrase : String = \"\" init () { } } \u5982\u679c\u952e\u540d\u9700\u8981\u81ea\u5b9a\u4e49\uff0c\u5219\u53ef\u4ee5\u5b9e\u73b0\u65b9\u6cd5 mutating func mapping(_ json: JSON) struct CompanyModel : Modelable { var name : String = \"\" var catchPhrase : String = \"\" init () { } mutating func mapping ( _ json : JSON ) { self . name = json [ \"nickname\" ]. stringValue } } \u652f\u6301\u6a21\u578b\u5d4c\u5957 struct UserModel : Modelable { var id : String = \"\" var name : String = \"\" var company : CompanyModel = CompanyModel () init () { } } \u4e8c\u3001Response --> Model \u00b6 1\u3001\u4ee5\u4e0b\u793a\u4f8b\u7686\u4f7f\u7528\u4e86 MoyaMapperPlugin \uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u6307\u5b9a \u89e3\u6790\u8def\u5f84 2\u3001\u5982\u679c\u6ca1\u6709\u4f7f\u7528 MoyaMapperPlugin \u5219\u9700\u8981\u6307\u5b9a \u89e3\u6790\u8def\u5f84 \uff0c\u5426\u5219\u65e0\u6cd5\u6b63\u5e38\u89e3\u6790 ps: \u89e3\u6790\u8def\u5f84 \u53ef\u4ee5\u4f7f\u7528 a>b \u8fd9\u79cd\u5f62\u5f0f\u6765\u89e3\u51b3\u591a\u7ea7\u8def\u5f84\u7684\u95ee\u9898 \u5982\u679c\u63a5\u53e3\u8bf7\u6c42\u540e json \u7684\u6570\u636e\u7ed3\u6784\u4e0e\u4e0b\u56fe\u7c7b\u4f3c\uff0c\u5219\u4f7f\u7528 MoyaMapper \u662f\u6700\u5408\u9002\u4e0d\u8fc7\u4e86 // Normal let model = response . mapObject ( MMModel . self ) print ( \"name -- \\( model . name ) \" ) print ( \"github -- \\( model . github ) \" ) // \u6253\u5370json print ( response . fetchJSONString ()) // Rx rxRequest . mapObject ( MMModel . self ) . subscribe ( onSuccess : { ( model ) in print ( \"name -- \\( model . name ) \" ) print ( \"github -- \\( model . github ) \" ) }). disposed ( by : disposeBag ) // Normal let models = response . mapArray ( MMModel . self ) let name = models [ 0 ]. name print ( \"count -- \\( models . count ) \" ) print ( \"name -- \\( name ) \" ) // \u6253\u5370 json \u6a21\u578b\u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u7684name print ( response . fetchString ( keys : [ 0 , \"name\" ])) // Rx rxRequest . mapArray ( MMModel . self ) . subscribe ( onSuccess : { models in let name = models [ 0 ]. name print ( \"count -- \\( models . count ) \" ) print ( \"name -- \\( name ) \" ) }). disposed ( by : disposeBag ) // Normal let ( isSuccess , tipStr ) = response . mapResult () print ( \"isSuccess -- \\( isSuccess ) \" ) print ( \"tipStr -- \\( tipStr ) \" ) // Rx rxRequest . mapResult () . subscribe ( onSuccess : { ( isSuccess , tipStr ) in print ( \"isSuccess -- \\( isSuccess ) \" ) // \u662f\u5426\u4e3a \"000\" print ( \"retMsg -- \\( retMsg ) \" ) }). disposed ( by : disposeBag ) \u4e09\u3001Misc \u00b6 \u5173\u4e8e Model \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5176\u5b83\u6bd4\u8f83\u6709\u7528\u7684\u65b9\u6cd5\uff0c\u8fd9\u91cc\u91cd\u70b9\u8bf4\u4e00\u4e0b Model \u4e0e JSON\u5b57\u7b26\u4e32 \u7684\u4e92\u8f6c let originModels = response . mapArray ( MyModel . self ) let jsonArrStr = originModels . toJSONString () let models1 = MyModel . mapModels ( from : jsonArrStr ) // \u4e0d\u63a8\u8350 let models2 = MyModel . codeModels ( from : jsonArrStr ) // \u63a8\u8350 let model = originModels [ 0 ] let jsonStr = model . toJSONString () let model1 = MyModel . mapModel ( from : jsonStr ) // \u4e0d\u63a8\u8350 let model2 = MyModel . codeModel ( from : jsonStr ) // \u63a8\u8350 log . debug ( \"model1 -- \\( model1 ) \" ) log . debug ( \"model2 -- \\( model2 ) \" ) \u6253\u5370\u7ed3\u679c model1 -- MyModel ( _id : \"5a8f5681421aa9133784f94b\" , created : \"\" ) model2 -- MyModel ( _id : \"5a8f5681421aa9133784f94b\" , created : \"2018-02-23T07:47:12.993Z\" ) \u8c03\u7528 toJSONString() \u53ef\u5c06 Model \u8f6c\u4e3a json \u5b57\u7b26\u4e32\uff0c\u5982\uff1a \"{\\\"name\\\" : \\\"LinXunFeng\\\"}\" mapModel \u4e0e codeModels \u90fd\u53ef\u4ee5\u5c06 json \u5b57\u7b26\u4e32\u8f6c\u6210\u5bf9\u5e94\u7684 Model codeModel \u662f\u4ec5\u4ee5 Codable \u7684\u89e3\u6790 mapModel \u4f1a\u5148\u8c03\u7528 codeModel \uff0c \u518d\u8c03\u7528 Model \u7684 mapping(_ json: JSON) \u65b9\u6cd5 \u2757\u5728 \u6a21\u578b\u4e2d\u5b9a\u4e49\u7684\u5c5e\u6027\u540d \u4e0e \u540e\u53f0\u8fd4\u56de\u7684json\u4e2d\u7684\u5b57\u6bb5\u540d \u4e0d\u4e00\u81f4\u65f6\uff0c\u8c03\u7528 mapModel \u53ef\u80fd\u4f1a\u4e3a\u81ea\u5b9a\u4e49\u7684\u5c5e\u6027\u8d4b\u503c\uff0c\u5bfc\u81f4\u6570\u636e\u4e0d\u6b63\u786e\u3002 \u2757\u7efc\u4e0a\uff0c\u5728 Model \u4e0e json\u5b57\u7b26\u4e32 \u7684\u4e92\u8f6c\u4e2d\uff0c \u5efa\u8bae\u4f7f\u7528 codeModel \u3002 mapModels \u548c codeModels \u4e5f\u4e00\u6837\u3002 \u4ee5\u4e0b\u7684\u65b9\u6cd5\u5c31\u4e0d\u518d\u8d58\u8ff0 func toData () -> Data ? func toDictionary () -> [ String : Any ] func toJSON () -> JSON","title":"Model"},{"location":"model/#model","text":"","title":"Model"},{"location":"model/#model_1","text":"\u652f\u6301\u6a21\u578b\u81ea\u52a8\u6620\u5c04\uff0c\u4e0d\u9700\u8981\u8003\u8651\u6e90json\u6570\u636e\u7684\u771f\u5b9e\u7c7b\u578b\uff0c\u8fd9\u91cc\u7edf\u4e00\u6309 Model \u4e2d\u5c5e\u6027\u58f0\u660e\u7684\u7c7b\u578b\u8fdb\u884c\u8f6c\u6362 \u4e00\u822c\u60c5\u51b5\u4e0b\u5982\u4e0b\u5199\u6cd5\u5373\u53ef struct CompanyModel : Modelable { var name : String = \"\" var catchPhrase : String = \"\" init () { } } \u5982\u679c\u952e\u540d\u9700\u8981\u81ea\u5b9a\u4e49\uff0c\u5219\u53ef\u4ee5\u5b9e\u73b0\u65b9\u6cd5 mutating func mapping(_ json: JSON) struct CompanyModel : Modelable { var name : String = \"\" var catchPhrase : String = \"\" init () { } mutating func mapping ( _ json : JSON ) { self . name = json [ \"nickname\" ]. stringValue } } \u652f\u6301\u6a21\u578b\u5d4c\u5957 struct UserModel : Modelable { var id : String = \"\" var name : String = \"\" var company : CompanyModel = CompanyModel () init () { } }","title":"\u4e00\u3001\u5b9a\u4e49Model"},{"location":"model/#response-model","text":"1\u3001\u4ee5\u4e0b\u793a\u4f8b\u7686\u4f7f\u7528\u4e86 MoyaMapperPlugin \uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u6307\u5b9a \u89e3\u6790\u8def\u5f84 2\u3001\u5982\u679c\u6ca1\u6709\u4f7f\u7528 MoyaMapperPlugin \u5219\u9700\u8981\u6307\u5b9a \u89e3\u6790\u8def\u5f84 \uff0c\u5426\u5219\u65e0\u6cd5\u6b63\u5e38\u89e3\u6790 ps: \u89e3\u6790\u8def\u5f84 \u53ef\u4ee5\u4f7f\u7528 a>b \u8fd9\u79cd\u5f62\u5f0f\u6765\u89e3\u51b3\u591a\u7ea7\u8def\u5f84\u7684\u95ee\u9898 \u5982\u679c\u63a5\u53e3\u8bf7\u6c42\u540e json \u7684\u6570\u636e\u7ed3\u6784\u4e0e\u4e0b\u56fe\u7c7b\u4f3c\uff0c\u5219\u4f7f\u7528 MoyaMapper \u662f\u6700\u5408\u9002\u4e0d\u8fc7\u4e86 // Normal let model = response . mapObject ( MMModel . self ) print ( \"name -- \\( model . name ) \" ) print ( \"github -- \\( model . github ) \" ) // \u6253\u5370json print ( response . fetchJSONString ()) // Rx rxRequest . mapObject ( MMModel . self ) . subscribe ( onSuccess : { ( model ) in print ( \"name -- \\( model . name ) \" ) print ( \"github -- \\( model . github ) \" ) }). disposed ( by : disposeBag ) // Normal let models = response . mapArray ( MMModel . self ) let name = models [ 0 ]. name print ( \"count -- \\( models . count ) \" ) print ( \"name -- \\( name ) \" ) // \u6253\u5370 json \u6a21\u578b\u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u7684name print ( response . fetchString ( keys : [ 0 , \"name\" ])) // Rx rxRequest . mapArray ( MMModel . self ) . subscribe ( onSuccess : { models in let name = models [ 0 ]. name print ( \"count -- \\( models . count ) \" ) print ( \"name -- \\( name ) \" ) }). disposed ( by : disposeBag ) // Normal let ( isSuccess , tipStr ) = response . mapResult () print ( \"isSuccess -- \\( isSuccess ) \" ) print ( \"tipStr -- \\( tipStr ) \" ) // Rx rxRequest . mapResult () . subscribe ( onSuccess : { ( isSuccess , tipStr ) in print ( \"isSuccess -- \\( isSuccess ) \" ) // \u662f\u5426\u4e3a \"000\" print ( \"retMsg -- \\( retMsg ) \" ) }). disposed ( by : disposeBag )","title":"\u4e8c\u3001Response --&gt; Model"},{"location":"model/#misc","text":"\u5173\u4e8e Model \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5176\u5b83\u6bd4\u8f83\u6709\u7528\u7684\u65b9\u6cd5\uff0c\u8fd9\u91cc\u91cd\u70b9\u8bf4\u4e00\u4e0b Model \u4e0e JSON\u5b57\u7b26\u4e32 \u7684\u4e92\u8f6c let originModels = response . mapArray ( MyModel . self ) let jsonArrStr = originModels . toJSONString () let models1 = MyModel . mapModels ( from : jsonArrStr ) // \u4e0d\u63a8\u8350 let models2 = MyModel . codeModels ( from : jsonArrStr ) // \u63a8\u8350 let model = originModels [ 0 ] let jsonStr = model . toJSONString () let model1 = MyModel . mapModel ( from : jsonStr ) // \u4e0d\u63a8\u8350 let model2 = MyModel . codeModel ( from : jsonStr ) // \u63a8\u8350 log . debug ( \"model1 -- \\( model1 ) \" ) log . debug ( \"model2 -- \\( model2 ) \" ) \u6253\u5370\u7ed3\u679c model1 -- MyModel ( _id : \"5a8f5681421aa9133784f94b\" , created : \"\" ) model2 -- MyModel ( _id : \"5a8f5681421aa9133784f94b\" , created : \"2018-02-23T07:47:12.993Z\" ) \u8c03\u7528 toJSONString() \u53ef\u5c06 Model \u8f6c\u4e3a json \u5b57\u7b26\u4e32\uff0c\u5982\uff1a \"{\\\"name\\\" : \\\"LinXunFeng\\\"}\" mapModel \u4e0e codeModels \u90fd\u53ef\u4ee5\u5c06 json \u5b57\u7b26\u4e32\u8f6c\u6210\u5bf9\u5e94\u7684 Model codeModel \u662f\u4ec5\u4ee5 Codable \u7684\u89e3\u6790 mapModel \u4f1a\u5148\u8c03\u7528 codeModel \uff0c \u518d\u8c03\u7528 Model \u7684 mapping(_ json: JSON) \u65b9\u6cd5 \u2757\u5728 \u6a21\u578b\u4e2d\u5b9a\u4e49\u7684\u5c5e\u6027\u540d \u4e0e \u540e\u53f0\u8fd4\u56de\u7684json\u4e2d\u7684\u5b57\u6bb5\u540d \u4e0d\u4e00\u81f4\u65f6\uff0c\u8c03\u7528 mapModel \u53ef\u80fd\u4f1a\u4e3a\u81ea\u5b9a\u4e49\u7684\u5c5e\u6027\u8d4b\u503c\uff0c\u5bfc\u81f4\u6570\u636e\u4e0d\u6b63\u786e\u3002 \u2757\u7efc\u4e0a\uff0c\u5728 Model \u4e0e json\u5b57\u7b26\u4e32 \u7684\u4e92\u8f6c\u4e2d\uff0c \u5efa\u8bae\u4f7f\u7528 codeModel \u3002 mapModels \u548c codeModels \u4e5f\u4e00\u6837\u3002 \u4ee5\u4e0b\u7684\u65b9\u6cd5\u5c31\u4e0d\u518d\u8d58\u8ff0 func toData () -> Data ? func toDictionary () -> [ String : Any ] func toJSON () -> JSON","title":"\u4e09\u3001Misc"},{"location":"moyaMapper/","text":"MM-Core \u00b6 \u4e00\u3001\u6ce8\u5165\u63d2\u4ef6 \u00b6 \u5b9a\u4e49\u4e00\u4e2a\u9075\u5b88ModelableParameterType\u534f\u8bae\u7684\u7ed3\u6784\u4f53 // \u5404\u53c2\u6570\u8fd4\u56de\u7684\u5185\u5bb9\u8bf7\u53c2\u8003\u4e0b\u9762JSON\u6570\u636e\u5bf9\u7167\u56fe struct NetParameter : ModelableParameterType { static var successValue : String { return \"false\" } static var statusCodeKey : String { return \"error\" } static var tipStrKey : String { return \"\" } static var modelKey : String { return \"results\" } } \u6b64\u5916\uff0c\u8fd9\u91cc\u8fd8\u53ef\u4ee5\u505a\u7b80\u5355\u7684\u8def\u5f84\u5904\u7406\uff0c\u4ee5\u5e94\u4ed8\u5404\u79cd\u60c5\u51b5\uff0c\u4ee5'>'\u9694\u5f00 // \u5982\uff1a error : { ' errorStatus ' : false ' errMsg ' : ' error Argument type ' } static var tipStrKey : String { return \"error>errMsg\" } \u4ee5plugin\u7684\u65b9\u5f0f\u4f20\u9012\u7ed9MoyaProvider let lxfNetTool = MoyaProvider < LXFNetworkTool >( plugins : [ MoyaMapperPlugin ( NetParameter . self )]) \u4e8c\u3001\u5b9a\u4e49\u6a21\u578b \u00b6 \u521b\u5efa\u4e00\u4e2a\u9075\u5b88Modelable\u534f\u8bae\u7684\u7ed3\u6784\u4f53 struct MyModel : Modelable { var _id : String var address : AddressModel ...... init ?( _ json : JSON ) { self . _id = json [ \"_id\" ]. stringValue self . address = json [ \"address\" ]. modelValue ( AddressModel . self ) ...... } } struct AddressModel : Modelable { var street : String ...... init ( _ json : JSON ) { self . street = json [ \"street\" ]. stringValue ...... } } \u6a21\u578b\u5d4c\u5957\u89e3\u6790 \u4f7f\u7528\u6cdb\u578b\u7684\u65b9\u5f0f\u4e3a JSON \u7c7b\u62d3\u5c55\u4e24\u4e2a\u89e3\u6790\u65b9\u6cd5\uff0c\u4f7f\u89e3\u6790\u6a21\u578b\u5d4c\u5957\u6613\u5982\u53cd\u638c // \u89e3\u6790\u5355\u4e2a\u6a21\u578b modelValue < T : Modelable >( _ type : T . Type ) -> T // \u89e3\u6790\u6570\u7ec4\u6a21\u578b modelsValue < T : Modelable >( _ type : T . Type ) -> [ T ] \u793a\u4f8b\u4ee3\u7801\uff1a self.address = json[\"address\"].modelValue(AddressModel.self) \u4e09\u3001\u89e3\u6790 \u00b6 \u8fd9\u91cc\u53ea\u8d34\u51fa\u4e3b\u8981\u4ee3\u7801 Normal lxfNetTool . request (. data ( type : . all , size : 10 , index : 1 )) { result in guard let response = result . value else { return } // Models let models = response . mapArray ( MyModel . self ) for model in models { print ( \"id -- \\( model . _id ) \" ) } // Result let ( isSuccess , tipStr ) = response . mapResult () print ( \"isSuccess -- \\( isSuccess ) \" ) print ( \"tipStr -- \\( tipStr ) \" ) // Model /* let model = response.mapObjResult(MyModel.self) */ // \u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u7684\u503c // response.fetchJSONString(keys: []]) // response.fetchJSONString(path: \"\", keys: []) // response.fetchString(path: \"\", keys: []) // \u4f7f\u7528\u81ea\u5b9a\u4e49\u6a21\u578b\u53c2\u6570\u7c7b /* let (result, models) = response.mapArrayResult(MyModel.self, params: { () -> (ModelableParameterType.Type) in return CustomParameter.self }) */ } \u8fd4\u56de\u7c7b\u578b\u6ce8\u91ca\uff1a \u00b6 result // static var successValue: String { return \"false\" } // static var statusCodeKey: String { return \"error\" } // static var tipStrKey: String { return \"\" } // \u5143\u7956\u7c7b\u578b // \u53c2\u65701\uff1a\u6839\u636estatusCodeKey\u53d6\u51fa\u7684\u503c\u4e0esuccessValue\u662f\u5426\u76f8\u7b49 // \u53c2\u65702\uff1a\u6839\u636etipStrKey\u53d6\u51fa\u7684\u503c result \uff1a ( Bool , String ) fetchString // fetchJSONString(keys: <[JSONSubscriptType]>) 1 \u3001\u901a\u8fc7 keys \u4f20\u9012\u6570\u7ec4 , \u8be5\u6570\u7ec4\u53ef\u4f20\u5165\u7684\u7c7b\u578b\u4e3a Int \u548c String 2 \u3001\u9ed8\u8ba4\u662f\u4ee5 modelKey \u6240\u793a\u8def\u5f84\uff0c\u6765\u83b7\u53d6\u76f8\u5e94\u7684\u6570\u503c\u3002\u5982\u679c modelKey\u975e\u4f60\u6240\u8981\u7528\u7684\u8d77\u59cb\u8def\u5f84 \uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u65b9\u7684\u91cd\u8f7d\u65b9\u6cd5\u91cd\u65b0\u6307\u5b9a\u8def\u5f84 // response.fetchJSONString(path: <String?>, keys: <[JSONSubscriptType]>) Misc \u00b6 \u81ea\u5b9a\u4e49Response \u00b6 \u5728\u65e0\u7f51\u72b6\u6001\u4e0b\u4f7f\u7528Moya\u53d1\u9001\u8bf7\u6c42\u65f6\uff0cresponse\u4e3anil\uff0c\u5219\u63d2\u4ef6\u5f0f\u6ce8\u5165\u65e0\u6548\u5316\uff0c\u53ef\u4ee5\u5728 catchError \u65b9\u6cd5\u4e2d\u81ea\u5b9a\u4e49 response \u5e76\u8fd4\u56de\u3002\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a rxRequest . catchError { ( error ) -> PrimitiveSequence < SingleTrait , Response > in // \u6355\u83b7\u8bf7\u6c42\u5931\u8d25\uff08\u5982\uff1a\u65e0\u7f51\u72b6\u6001\uff09\uff0c\u81ea\u5b9a\u4e49response let err = error as NSError let resBodyDict = [ \"error\" : \"true\" , \"errMsg\" : err . localizedDescription ] let response = Response ( resBodyDict , statusCode : 203 , parameterType : NetParameter . self ) return Single . just ( response ) }. mapArrayResult ( MyModel . self ). subscribe ( onSuccess : { ( result , models ) in print ( \"isSuccess -- \\( result . 0 ) \" ) print ( \"tipStr -- \\( result . 1 ) \" ) print ( \"models count -- \\( models . count ) \" ) }). disposed ( by : dispseBag ) \u914d\u5408 MoyaSugar \u4f7f\u7528\u66f4\u52a0\u65b9\u4fbf","title":"MM-Core"},{"location":"moyaMapper/#mm-core","text":"","title":"MM-Core"},{"location":"moyaMapper/#_1","text":"\u5b9a\u4e49\u4e00\u4e2a\u9075\u5b88ModelableParameterType\u534f\u8bae\u7684\u7ed3\u6784\u4f53 // \u5404\u53c2\u6570\u8fd4\u56de\u7684\u5185\u5bb9\u8bf7\u53c2\u8003\u4e0b\u9762JSON\u6570\u636e\u5bf9\u7167\u56fe struct NetParameter : ModelableParameterType { static var successValue : String { return \"false\" } static var statusCodeKey : String { return \"error\" } static var tipStrKey : String { return \"\" } static var modelKey : String { return \"results\" } } \u6b64\u5916\uff0c\u8fd9\u91cc\u8fd8\u53ef\u4ee5\u505a\u7b80\u5355\u7684\u8def\u5f84\u5904\u7406\uff0c\u4ee5\u5e94\u4ed8\u5404\u79cd\u60c5\u51b5\uff0c\u4ee5'>'\u9694\u5f00 // \u5982\uff1a error : { ' errorStatus ' : false ' errMsg ' : ' error Argument type ' } static var tipStrKey : String { return \"error>errMsg\" } \u4ee5plugin\u7684\u65b9\u5f0f\u4f20\u9012\u7ed9MoyaProvider let lxfNetTool = MoyaProvider < LXFNetworkTool >( plugins : [ MoyaMapperPlugin ( NetParameter . self )])","title":"\u4e00\u3001\u6ce8\u5165\u63d2\u4ef6"},{"location":"moyaMapper/#_2","text":"\u521b\u5efa\u4e00\u4e2a\u9075\u5b88Modelable\u534f\u8bae\u7684\u7ed3\u6784\u4f53 struct MyModel : Modelable { var _id : String var address : AddressModel ...... init ?( _ json : JSON ) { self . _id = json [ \"_id\" ]. stringValue self . address = json [ \"address\" ]. modelValue ( AddressModel . self ) ...... } } struct AddressModel : Modelable { var street : String ...... init ( _ json : JSON ) { self . street = json [ \"street\" ]. stringValue ...... } } \u6a21\u578b\u5d4c\u5957\u89e3\u6790 \u4f7f\u7528\u6cdb\u578b\u7684\u65b9\u5f0f\u4e3a JSON \u7c7b\u62d3\u5c55\u4e24\u4e2a\u89e3\u6790\u65b9\u6cd5\uff0c\u4f7f\u89e3\u6790\u6a21\u578b\u5d4c\u5957\u6613\u5982\u53cd\u638c // \u89e3\u6790\u5355\u4e2a\u6a21\u578b modelValue < T : Modelable >( _ type : T . Type ) -> T // \u89e3\u6790\u6570\u7ec4\u6a21\u578b modelsValue < T : Modelable >( _ type : T . Type ) -> [ T ] \u793a\u4f8b\u4ee3\u7801\uff1a self.address = json[\"address\"].modelValue(AddressModel.self)","title":"\u4e8c\u3001\u5b9a\u4e49\u6a21\u578b"},{"location":"moyaMapper/#_3","text":"\u8fd9\u91cc\u53ea\u8d34\u51fa\u4e3b\u8981\u4ee3\u7801 Normal lxfNetTool . request (. data ( type : . all , size : 10 , index : 1 )) { result in guard let response = result . value else { return } // Models let models = response . mapArray ( MyModel . self ) for model in models { print ( \"id -- \\( model . _id ) \" ) } // Result let ( isSuccess , tipStr ) = response . mapResult () print ( \"isSuccess -- \\( isSuccess ) \" ) print ( \"tipStr -- \\( tipStr ) \" ) // Model /* let model = response.mapObjResult(MyModel.self) */ // \u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u7684\u503c // response.fetchJSONString(keys: []]) // response.fetchJSONString(path: \"\", keys: []) // response.fetchString(path: \"\", keys: []) // \u4f7f\u7528\u81ea\u5b9a\u4e49\u6a21\u578b\u53c2\u6570\u7c7b /* let (result, models) = response.mapArrayResult(MyModel.self, params: { () -> (ModelableParameterType.Type) in return CustomParameter.self }) */ }","title":"\u4e09\u3001\u89e3\u6790"},{"location":"moyaMapper/#_4","text":"result // static var successValue: String { return \"false\" } // static var statusCodeKey: String { return \"error\" } // static var tipStrKey: String { return \"\" } // \u5143\u7956\u7c7b\u578b // \u53c2\u65701\uff1a\u6839\u636estatusCodeKey\u53d6\u51fa\u7684\u503c\u4e0esuccessValue\u662f\u5426\u76f8\u7b49 // \u53c2\u65702\uff1a\u6839\u636etipStrKey\u53d6\u51fa\u7684\u503c result \uff1a ( Bool , String ) fetchString // fetchJSONString(keys: <[JSONSubscriptType]>) 1 \u3001\u901a\u8fc7 keys \u4f20\u9012\u6570\u7ec4 , \u8be5\u6570\u7ec4\u53ef\u4f20\u5165\u7684\u7c7b\u578b\u4e3a Int \u548c String 2 \u3001\u9ed8\u8ba4\u662f\u4ee5 modelKey \u6240\u793a\u8def\u5f84\uff0c\u6765\u83b7\u53d6\u76f8\u5e94\u7684\u6570\u503c\u3002\u5982\u679c modelKey\u975e\u4f60\u6240\u8981\u7528\u7684\u8d77\u59cb\u8def\u5f84 \uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u65b9\u7684\u91cd\u8f7d\u65b9\u6cd5\u91cd\u65b0\u6307\u5b9a\u8def\u5f84 // response.fetchJSONString(path: <String?>, keys: <[JSONSubscriptType]>)","title":"\u8fd4\u56de\u7c7b\u578b\u6ce8\u91ca\uff1a"},{"location":"moyaMapper/#misc","text":"","title":"Misc"},{"location":"moyaMapper/#response","text":"\u5728\u65e0\u7f51\u72b6\u6001\u4e0b\u4f7f\u7528Moya\u53d1\u9001\u8bf7\u6c42\u65f6\uff0cresponse\u4e3anil\uff0c\u5219\u63d2\u4ef6\u5f0f\u6ce8\u5165\u65e0\u6548\u5316\uff0c\u53ef\u4ee5\u5728 catchError \u65b9\u6cd5\u4e2d\u81ea\u5b9a\u4e49 response \u5e76\u8fd4\u56de\u3002\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a rxRequest . catchError { ( error ) -> PrimitiveSequence < SingleTrait , Response > in // \u6355\u83b7\u8bf7\u6c42\u5931\u8d25\uff08\u5982\uff1a\u65e0\u7f51\u72b6\u6001\uff09\uff0c\u81ea\u5b9a\u4e49response let err = error as NSError let resBodyDict = [ \"error\" : \"true\" , \"errMsg\" : err . localizedDescription ] let response = Response ( resBodyDict , statusCode : 203 , parameterType : NetParameter . self ) return Single . just ( response ) }. mapArrayResult ( MyModel . self ). subscribe ( onSuccess : { ( result , models ) in print ( \"isSuccess -- \\( result . 0 ) \" ) print ( \"tipStr -- \\( result . 1 ) \" ) print ( \"models count -- \\( models . count ) \" ) }). disposed ( by : dispseBag ) \u914d\u5408 MoyaSugar \u4f7f\u7528\u66f4\u52a0\u65b9\u4fbf","title":"\u81ea\u5b9a\u4e49Response"},{"location":"plugin/","text":"Plugin \u00b6 MoyaMapperPlugin \u7684\u521d\u59cb\u5316\u65b9\u6cd5 public init < T : ModelableParameterType >( _ type : T , transformError : Bool = true ) type : ModelableParameterType \u7528\u4e8e\u5b9a\u4e49\u5b57\u6bb5\u8def\u5f84\uff0c\u505a\u4e3a\u5168\u5c40\u89e3\u6790\u6570\u636e\u7684\u4f9d\u636e transformError : Bool \u662f\u5426\u5f53\u7f51\u7edc\u8bf7\u6c42\u5931\u8d25\u65f6\uff0c\u81ea\u52a8\u8f6c\u6362\u8bf7\u6c42\u7ed3\u679c\uff0c\u9ed8\u8ba4\u4e3a true \u5f53\u8bf7\u6c42\u5931\u8d25\u7684\u65f6\u5019\uff0c\u6b64\u65f6\u7684 result.response \u4e3a nil \uff0c\u6839\u636e transformError \u662f\u5426 true \u5224\u65ad\u662f\u5426\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 response \u5e76\u8fd4\u56de\u51fa\u53bb\u3002 \u27a1 \u672c\u6765\u53ef\u4ee5\u8bf7\u6c42\u5230\u7684\u6570\u636e\u5185\u5bb9 \u27a1 \u73b0\u5728\u5173\u95ed\u7f51\u7edc\uff0c\u518d\u8bf7\u6c42\u6570\u636e \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u5373\u4e0d\u505a\u4efb\u4f55\u4e0d\u5904\u7406\u7684\u65f6\u5019\uff0c Response \u4e3a nil \u7ecf\u8fc7 MoyaMapperPlugin \u5904\u7406\u7684\u540e\u53ef\u5f97\u5230\u8f6c\u6362\u540e\u7684 Response \uff0c\u5982\u56fe \u8fd9\u91cc\u5c06\u8bf7\u6c42\u5931\u8d25\u8fdb\u884c\u4e86\u7edf\u4e00\u5904\u7406\uff0c\u65e0\u8bba\u662f\u670d\u52a1\u5668\u8fd8\u662f\u81ea\u8eab\u7f51\u7edc\u7684\u95ee\u9898\uff0c retStatus \u90fd\u4e3a MMStatusCode.loadFail\uff0c\u4f46\u662f errorDescription \u4f1a\u4fdd\u6301\u539f\u6765\u7684\u6837\u5b50\u5e76\u8d4b\u503c\u7ed9 retMsg \u3002 retStatus \u503c\u4f1a\u4ece\u679a\u4e3e MMStatusCode \u4e2d\u53d6 loadFail.rawValue \uff0c\u5373 700 \u53d6 \u7c7b\u578b\u4e3a ModelableParameterType \u7684 type \u4e2d statusCodeKey \u6240\u6307\u5b9a\u7684\u503c \u4e3a\u952e\u540d ps: \u53ef\u4ee5\u901a\u8fc7\u5224\u65ad retStatus \u662f\u5426\u4e0e MMStatusCode.loadFail.rawValue \u76f8\u540c\u6765\u5224\u65ad\u662f\u5426\u663e\u793a\u52a0\u8f7d\u5931\u8d25\u7684\u7a7a\u767d\u9875\u5360\u4f4d\u56fe retStatus \u7684\u503c\u53ea\u6709\u5728\u8bf7\u6c42\u5931\u8d25\u7684\u8bf7\u6c42\u4e0b\uff0c MoyaMapperPlugin \u624d\u4f1a\u53bb\u4fee\u6539\u3002\u5982\u4ece\u7f13\u5b58\u4e2d\u53d6\u51fa\u7684\u6570\u636e\uff0c\u5176 retStatus \u8fd8\u662f 000 \u3002","title":"Plugin"},{"location":"plugin/#plugin","text":"MoyaMapperPlugin \u7684\u521d\u59cb\u5316\u65b9\u6cd5 public init < T : ModelableParameterType >( _ type : T , transformError : Bool = true ) type : ModelableParameterType \u7528\u4e8e\u5b9a\u4e49\u5b57\u6bb5\u8def\u5f84\uff0c\u505a\u4e3a\u5168\u5c40\u89e3\u6790\u6570\u636e\u7684\u4f9d\u636e transformError : Bool \u662f\u5426\u5f53\u7f51\u7edc\u8bf7\u6c42\u5931\u8d25\u65f6\uff0c\u81ea\u52a8\u8f6c\u6362\u8bf7\u6c42\u7ed3\u679c\uff0c\u9ed8\u8ba4\u4e3a true \u5f53\u8bf7\u6c42\u5931\u8d25\u7684\u65f6\u5019\uff0c\u6b64\u65f6\u7684 result.response \u4e3a nil \uff0c\u6839\u636e transformError \u662f\u5426 true \u5224\u65ad\u662f\u5426\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 response \u5e76\u8fd4\u56de\u51fa\u53bb\u3002 \u27a1 \u672c\u6765\u53ef\u4ee5\u8bf7\u6c42\u5230\u7684\u6570\u636e\u5185\u5bb9 \u27a1 \u73b0\u5728\u5173\u95ed\u7f51\u7edc\uff0c\u518d\u8bf7\u6c42\u6570\u636e \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u5373\u4e0d\u505a\u4efb\u4f55\u4e0d\u5904\u7406\u7684\u65f6\u5019\uff0c Response \u4e3a nil \u7ecf\u8fc7 MoyaMapperPlugin \u5904\u7406\u7684\u540e\u53ef\u5f97\u5230\u8f6c\u6362\u540e\u7684 Response \uff0c\u5982\u56fe \u8fd9\u91cc\u5c06\u8bf7\u6c42\u5931\u8d25\u8fdb\u884c\u4e86\u7edf\u4e00\u5904\u7406\uff0c\u65e0\u8bba\u662f\u670d\u52a1\u5668\u8fd8\u662f\u81ea\u8eab\u7f51\u7edc\u7684\u95ee\u9898\uff0c retStatus \u90fd\u4e3a MMStatusCode.loadFail\uff0c\u4f46\u662f errorDescription \u4f1a\u4fdd\u6301\u539f\u6765\u7684\u6837\u5b50\u5e76\u8d4b\u503c\u7ed9 retMsg \u3002 retStatus \u503c\u4f1a\u4ece\u679a\u4e3e MMStatusCode \u4e2d\u53d6 loadFail.rawValue \uff0c\u5373 700 \u53d6 \u7c7b\u578b\u4e3a ModelableParameterType \u7684 type \u4e2d statusCodeKey \u6240\u6307\u5b9a\u7684\u503c \u4e3a\u952e\u540d ps: \u53ef\u4ee5\u901a\u8fc7\u5224\u65ad retStatus \u662f\u5426\u4e0e MMStatusCode.loadFail.rawValue \u76f8\u540c\u6765\u5224\u65ad\u662f\u5426\u663e\u793a\u52a0\u8f7d\u5931\u8d25\u7684\u7a7a\u767d\u9875\u5360\u4f4d\u56fe retStatus \u7684\u503c\u53ea\u6709\u5728\u8bf7\u6c42\u5931\u8d25\u7684\u8bf7\u6c42\u4e0b\uff0c MoyaMapperPlugin \u624d\u4f1a\u53bb\u4fee\u6539\u3002\u5982\u4ece\u7f13\u5b58\u4e2d\u53d6\u51fa\u7684\u6570\u636e\uff0c\u5176 retStatus \u8fd8\u662f 000 \u3002","title":"Plugin"},{"location":"core/fetchJSONString/","text":"Core-fetchJSONString \u00b6 /// \u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u7684\u539f\u59cbjson\u5b57\u7b26\u4e32 /// /// - Parameters: /// - path: JSON\u6570\u636e\u8def\u5f84 (\u9ed8\u8ba4\u4e3a\u6839\u8def\u5f84) /// - keys: \u76ee\u6807\u6570\u636e\u5b50\u8def\u5f84 (\u4f8b\uff1a [0, \"_id\"]) /// - Returns: \u6307\u5b9a\u8def\u5f84\u7684\u539f\u59cbjson\u5b57\u7b26\u4e32 func fetchJSONString ( path : String ? = nil , keys : [ JSONSubscriptType ] = []) -> String Response \u8f6c\u6362\u4e3a String path \u6307\u5b9a\u53d6\u503c\u8def\u5f84\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u591a\u7ea7\uff0c\u5982 retBody>name \uff0c\u5982\u679c\u4e3a nil \uff0c\u53d6\u6839\u8def\u5f84 \"\" key \u5728 path \u7684\u524d\u63d0\u4e0b\uff0c\u518d\u6307\u5b9a\u8be6\u7ec6\u7684\u53d6\u503c\u8def\u5f84\uff0c\u53ef\u4e3a Int \u6216 String ps: \u5f53\u524d Response \u7684 ModelableParameterType \u53ef\u4ee5\u901a\u8fc7 MoyaMapperPlugin \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e Example \u00b6 \"\" let json = response . fetchJSONString () print ( \"json -- \\( json ) \" ) json -- { \"retStatus\" : \"000\", \"retMsg\" : \"\u83b7\u53d6\u6570\u636e\u6210\u529f\", \"retBody\" : { \"name\" : \"MoyaMapper\", \"organization\" : \"https:\\/\\/github.com\\/MoyaMapper\", \"github\" : \"https:\\/\\/github.com\\/LinXunFeng\", \"avatar\" : \"https:\\/\\/avatars0.githubusercontent.com\\/u\\/19367531?s=460&v=4\", \"age\" : 23, \"author\" : \"LinXunFeng\", \"logoUrl\" : \"https:\\/\\/github.com\\/MoyaMapper\\/MoyaMapper.github.io\\/raw\\/master\\/img\\/MoyaMapper.png\" } } \"retBody\" let json = response . fetchJSONString ( path : \"retBody\" , keys : []) print ( \"json -- \\( json ) \" ) json -- { \"name\" : \"MoyaMapper\", \"organization\" : \"https:\\/\\/github.com\\/MoyaMapper\", \"github\" : \"https:\\/\\/github.com\\/LinXunFeng\", \"avatar\" : \"https:\\/\\/avatars0.githubusercontent.com\\/u\\/19367531?s=460&v=4\", \"age\" : 23, \"author\" : \"LinXunFeng\", \"logoUrl\" : \"https:\\/\\/github.com\\/MoyaMapper\\/MoyaMapper.github.io\\/raw\\/master\\/img\\/MoyaMapper.png\" }","title":"fetchJSONString"},{"location":"core/fetchJSONString/#core-fetchjsonstring","text":"/// \u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u7684\u539f\u59cbjson\u5b57\u7b26\u4e32 /// /// - Parameters: /// - path: JSON\u6570\u636e\u8def\u5f84 (\u9ed8\u8ba4\u4e3a\u6839\u8def\u5f84) /// - keys: \u76ee\u6807\u6570\u636e\u5b50\u8def\u5f84 (\u4f8b\uff1a [0, \"_id\"]) /// - Returns: \u6307\u5b9a\u8def\u5f84\u7684\u539f\u59cbjson\u5b57\u7b26\u4e32 func fetchJSONString ( path : String ? = nil , keys : [ JSONSubscriptType ] = []) -> String Response \u8f6c\u6362\u4e3a String path \u6307\u5b9a\u53d6\u503c\u8def\u5f84\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u591a\u7ea7\uff0c\u5982 retBody>name \uff0c\u5982\u679c\u4e3a nil \uff0c\u53d6\u6839\u8def\u5f84 \"\" key \u5728 path \u7684\u524d\u63d0\u4e0b\uff0c\u518d\u6307\u5b9a\u8be6\u7ec6\u7684\u53d6\u503c\u8def\u5f84\uff0c\u53ef\u4e3a Int \u6216 String ps: \u5f53\u524d Response \u7684 ModelableParameterType \u53ef\u4ee5\u901a\u8fc7 MoyaMapperPlugin \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e","title":"Core-fetchJSONString"},{"location":"core/fetchJSONString/#example","text":"\"\" let json = response . fetchJSONString () print ( \"json -- \\( json ) \" ) json -- { \"retStatus\" : \"000\", \"retMsg\" : \"\u83b7\u53d6\u6570\u636e\u6210\u529f\", \"retBody\" : { \"name\" : \"MoyaMapper\", \"organization\" : \"https:\\/\\/github.com\\/MoyaMapper\", \"github\" : \"https:\\/\\/github.com\\/LinXunFeng\", \"avatar\" : \"https:\\/\\/avatars0.githubusercontent.com\\/u\\/19367531?s=460&v=4\", \"age\" : 23, \"author\" : \"LinXunFeng\", \"logoUrl\" : \"https:\\/\\/github.com\\/MoyaMapper\\/MoyaMapper.github.io\\/raw\\/master\\/img\\/MoyaMapper.png\" } } \"retBody\" let json = response . fetchJSONString ( path : \"retBody\" , keys : []) print ( \"json -- \\( json ) \" ) json -- { \"name\" : \"MoyaMapper\", \"organization\" : \"https:\\/\\/github.com\\/MoyaMapper\", \"github\" : \"https:\\/\\/github.com\\/LinXunFeng\", \"avatar\" : \"https:\\/\\/avatars0.githubusercontent.com\\/u\\/19367531?s=460&v=4\", \"age\" : 23, \"author\" : \"LinXunFeng\", \"logoUrl\" : \"https:\\/\\/github.com\\/MoyaMapper\\/MoyaMapper.github.io\\/raw\\/master\\/img\\/MoyaMapper.png\" }","title":"Example"},{"location":"core/fetchString/","text":"Core-fetchString \u00b6 /// \u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u7684\u5b57\u7b26\u4e32 /// /// - Parameters: /// - path: JSON\u6570\u636e\u8def\u5f84 (\u9ed8\u8ba4\u4e3a\u6a21\u578b\u6570\u636e\u8def\u5f84) /// - keys: \u76ee\u6807\u6570\u636e\u5b50\u8def\u5f84 (\u4f8b\uff1a [0, \"_id\"]) /// - Returns: \u6307\u5b9a\u8def\u5f84\u7684\u5b57\u7b26\u4e32 func fetchString ( path : String ? = nil , keys : [ JSONSubscriptType ] = []) -> String Response \u8f6c\u6362\u4e3a String path \u6307\u5b9a\u53d6\u503c\u8def\u5f84\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u591a\u7ea7\uff0c\u5982 retBody>name \uff0c\u5982\u679c\u4e3a nil \uff0c\u5219\u53d6\u5f53\u524d Response \u4e0b ModelableParameterType \u7684 modelKey key \u5728 path \u7684\u524d\u63d0\u4e0b\uff0c\u518d\u6307\u5b9a\u8be6\u7ec6\u7684\u53d6\u503c\u8def\u5f84\uff0c\u53ef\u4e3a Int \u6216 String ps: \u5f53\u524d Response \u7684 ModelableParameterType \u53ef\u4ee5\u901a\u8fc7 MoyaMapperPlugin \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e Example \u00b6 let name = response . fetchString ( path : \"retBody>name\" ) print ( \"name -- \\( name ) \" ) // name -- MoyaMapper let github = response . fetchString ( path : \"retBody\" , keys : [ 1 , \"github\" ]) print ( \"github -- \\( github ) \" ) // github -- https://github.com/LinXunFeng/RxSwiftDemo","title":"fetchString"},{"location":"core/fetchString/#core-fetchstring","text":"/// \u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u7684\u5b57\u7b26\u4e32 /// /// - Parameters: /// - path: JSON\u6570\u636e\u8def\u5f84 (\u9ed8\u8ba4\u4e3a\u6a21\u578b\u6570\u636e\u8def\u5f84) /// - keys: \u76ee\u6807\u6570\u636e\u5b50\u8def\u5f84 (\u4f8b\uff1a [0, \"_id\"]) /// - Returns: \u6307\u5b9a\u8def\u5f84\u7684\u5b57\u7b26\u4e32 func fetchString ( path : String ? = nil , keys : [ JSONSubscriptType ] = []) -> String Response \u8f6c\u6362\u4e3a String path \u6307\u5b9a\u53d6\u503c\u8def\u5f84\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u591a\u7ea7\uff0c\u5982 retBody>name \uff0c\u5982\u679c\u4e3a nil \uff0c\u5219\u53d6\u5f53\u524d Response \u4e0b ModelableParameterType \u7684 modelKey key \u5728 path \u7684\u524d\u63d0\u4e0b\uff0c\u518d\u6307\u5b9a\u8be6\u7ec6\u7684\u53d6\u503c\u8def\u5f84\uff0c\u53ef\u4e3a Int \u6216 String ps: \u5f53\u524d Response \u7684 ModelableParameterType \u53ef\u4ee5\u901a\u8fc7 MoyaMapperPlugin \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e","title":"Core-fetchString"},{"location":"core/fetchString/#example","text":"let name = response . fetchString ( path : \"retBody>name\" ) print ( \"name -- \\( name ) \" ) // name -- MoyaMapper let github = response . fetchString ( path : \"retBody\" , keys : [ 1 , \"github\" ]) print ( \"github -- \\( github ) \" ) // github -- https://github.com/LinXunFeng/RxSwiftDemo","title":"Example"},{"location":"core/mapArray/","text":"Core-mapArray \u00b6 /// Response -> [Model] /// /// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - modelKey: \u6a21\u578b\u8def\u5f84 /// - Returns: \u6a21\u578b\u6570\u7ec4 func mapArray < T : Modelable >( _ type : T . Type , modelKey : String ? = nil ) -> [ T ] Response \u8f6c\u6362\u4e3a \u6a21\u578b\u6570\u7ec4 (\u6a21\u578b\u9075\u5b88 Modelable \u534f\u8bae) type \u9075\u5b88\u4e86 Modelable \u534f\u8bae\u7684\u6a21\u578b\u7c7b\u578b modelKey \u6307\u5b9a\u53d6\u503c\u8def\u5f84\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u591a\u7ea7\uff0c\u5982 retBody>name \uff0c\u5982\u679c\u4e3a nil \uff0c\u5219\u53d6\u5f53\u524d Response \u4e0b ModelableParameterType \u7684 modelKey ps: \u5f53\u524d Response \u7684 ModelableParameterType \u53ef\u4ee5\u901a\u8fc7 MoyaMapperPlugin \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e Example \u00b6 struct MMModel : Modelable { var name : String var organization : String var logoUrl : String var github : String var avatar : String var author : String var age : Int init ( _ json : JSON ) { name = json [ \"name\" ]. stringValue organization = json [ \"organization\" ]. stringValue logoUrl = json [ \"logoUrl\" ]. stringValue github = json [ \"github\" ]. stringValue avatar = json [ \"avatar\" ]. stringValue author = json [ \"author\" ]. stringValue age = json [ \"age\" ]. intValue } } \u8f6c\u6a21\u578b\u6570\u7ec4 let models = response . mapArray ( MMModel . self , modelKey : \"retBody\" ) let name = models [ 0 ]. name print ( \"count -- \\( models . count ) \" ) print ( \"name -- \\( name ) \" ) \u6253\u5370\u7ed3\u679c count -- 4 name -- MoyaMapper","title":"mapArray"},{"location":"core/mapArray/#core-maparray","text":"/// Response -> [Model] /// /// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - modelKey: \u6a21\u578b\u8def\u5f84 /// - Returns: \u6a21\u578b\u6570\u7ec4 func mapArray < T : Modelable >( _ type : T . Type , modelKey : String ? = nil ) -> [ T ] Response \u8f6c\u6362\u4e3a \u6a21\u578b\u6570\u7ec4 (\u6a21\u578b\u9075\u5b88 Modelable \u534f\u8bae) type \u9075\u5b88\u4e86 Modelable \u534f\u8bae\u7684\u6a21\u578b\u7c7b\u578b modelKey \u6307\u5b9a\u53d6\u503c\u8def\u5f84\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u591a\u7ea7\uff0c\u5982 retBody>name \uff0c\u5982\u679c\u4e3a nil \uff0c\u5219\u53d6\u5f53\u524d Response \u4e0b ModelableParameterType \u7684 modelKey ps: \u5f53\u524d Response \u7684 ModelableParameterType \u53ef\u4ee5\u901a\u8fc7 MoyaMapperPlugin \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e","title":"Core-mapArray"},{"location":"core/mapArray/#example","text":"struct MMModel : Modelable { var name : String var organization : String var logoUrl : String var github : String var avatar : String var author : String var age : Int init ( _ json : JSON ) { name = json [ \"name\" ]. stringValue organization = json [ \"organization\" ]. stringValue logoUrl = json [ \"logoUrl\" ]. stringValue github = json [ \"github\" ]. stringValue avatar = json [ \"avatar\" ]. stringValue author = json [ \"author\" ]. stringValue age = json [ \"age\" ]. intValue } } \u8f6c\u6a21\u578b\u6570\u7ec4 let models = response . mapArray ( MMModel . self , modelKey : \"retBody\" ) let name = models [ 0 ]. name print ( \"count -- \\( models . count ) \" ) print ( \"name -- \\( name ) \" ) \u6253\u5370\u7ed3\u679c count -- 4 name -- MoyaMapper","title":"Example"},{"location":"core/mapArrayResult/","text":"Core-mapArrayResult \u00b6 /// Response -> (MoyaMapperResult, [Model]) /// /// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - params: \u81ea\u5b9a\u4e49\u89e3\u6790\u7684\u8bbe\u7f6e\u56de\u8c03 /// - Returns: (MoyaMapperResult, [Model]) func mapArrayResult < T : Modelable >( _ type : T . Type , params : ModelableParamsBlock ? = nil ) -> ( MoyaMapperResult , [ T ]) Response \u8f6c\u6362\u4e3a \u5143\u7956 ((Bool, String), [Model]) type \u9075\u5b88\u4e86 Modelable \u534f\u8bae\u7684\u6a21\u578b\u7c7b\u578b params \u7528\u4e8e\u6307\u5b9a\u7279\u6b8a\u53d6\u503c\u8def\u5f84\uff0c\u5982\u679c\u4e3a nil \uff0c\u5219\u53d6\u5f53\u524d Response \u7684 ModelableParameterType \u4e3a\u53d6\u503c\u4f9d\u636e ps: \u5f53\u524d Response \u7684 ModelableParameterType \u53ef\u4ee5\u901a\u8fc7 MoyaMapperPlugin \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e Example \u00b6 struct MMModel : Modelable { var name : String var organization : String var logoUrl : String var github : String var avatar : String var author : String var age : Int init ( _ json : JSON ) { name = json [ \"name\" ]. stringValue organization = json [ \"organization\" ]. stringValue logoUrl = json [ \"logoUrl\" ]. stringValue github = json [ \"github\" ]. stringValue avatar = json [ \"avatar\" ]. stringValue author = json [ \"author\" ]. stringValue age = json [ \"age\" ]. intValue } } // MARK: - \u81ea\u5b9a\u4e49\u7f51\u7edc\u7ed3\u679c\u53c2\u6570 struct CustomNetParameter : ModelableParameterType { var successValue = \"000\" var statusCodeKey = \"retStatus\" var tipStrKey = \"retMsg\" var modelKey = \"retBody\" } \u8f6c MoyaMapperResult + \u6a21\u578b\u6570\u7ec4 let ( result , models ) response . mapArrayResult ( MMModel . self ) { CustomNetParameter () } let name = models [ 0 ]. name print ( \"result -- \\( result ) \" ) print ( \"count -- \\( models . count ) \" ) print ( \"name -- \\( name ) \" ) \u6253\u5370\u7ed3\u679c result -- (true, \"\u83b7\u53d6\u6570\u636e\u6210\u529f\") count -- 4 name -- MoyaMapper","title":"mapArrayResult"},{"location":"core/mapArrayResult/#core-maparrayresult","text":"/// Response -> (MoyaMapperResult, [Model]) /// /// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - params: \u81ea\u5b9a\u4e49\u89e3\u6790\u7684\u8bbe\u7f6e\u56de\u8c03 /// - Returns: (MoyaMapperResult, [Model]) func mapArrayResult < T : Modelable >( _ type : T . Type , params : ModelableParamsBlock ? = nil ) -> ( MoyaMapperResult , [ T ]) Response \u8f6c\u6362\u4e3a \u5143\u7956 ((Bool, String), [Model]) type \u9075\u5b88\u4e86 Modelable \u534f\u8bae\u7684\u6a21\u578b\u7c7b\u578b params \u7528\u4e8e\u6307\u5b9a\u7279\u6b8a\u53d6\u503c\u8def\u5f84\uff0c\u5982\u679c\u4e3a nil \uff0c\u5219\u53d6\u5f53\u524d Response \u7684 ModelableParameterType \u4e3a\u53d6\u503c\u4f9d\u636e ps: \u5f53\u524d Response \u7684 ModelableParameterType \u53ef\u4ee5\u901a\u8fc7 MoyaMapperPlugin \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e","title":"Core-mapArrayResult"},{"location":"core/mapArrayResult/#example","text":"struct MMModel : Modelable { var name : String var organization : String var logoUrl : String var github : String var avatar : String var author : String var age : Int init ( _ json : JSON ) { name = json [ \"name\" ]. stringValue organization = json [ \"organization\" ]. stringValue logoUrl = json [ \"logoUrl\" ]. stringValue github = json [ \"github\" ]. stringValue avatar = json [ \"avatar\" ]. stringValue author = json [ \"author\" ]. stringValue age = json [ \"age\" ]. intValue } } // MARK: - \u81ea\u5b9a\u4e49\u7f51\u7edc\u7ed3\u679c\u53c2\u6570 struct CustomNetParameter : ModelableParameterType { var successValue = \"000\" var statusCodeKey = \"retStatus\" var tipStrKey = \"retMsg\" var modelKey = \"retBody\" } \u8f6c MoyaMapperResult + \u6a21\u578b\u6570\u7ec4 let ( result , models ) response . mapArrayResult ( MMModel . self ) { CustomNetParameter () } let name = models [ 0 ]. name print ( \"result -- \\( result ) \" ) print ( \"count -- \\( models . count ) \" ) print ( \"name -- \\( name ) \" ) \u6253\u5370\u7ed3\u679c result -- (true, \"\u83b7\u53d6\u6570\u636e\u6210\u529f\") count -- 4 name -- MoyaMapper","title":"Example"},{"location":"core/mapObjResult/","text":"Core-mapObjResult \u00b6 /// Response -> (MoyaMapperResult, Model) /// /// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - params: \u81ea\u5b9a\u4e49\u89e3\u6790\u7684\u8bbe\u7f6e\u56de\u8c03 /// - Returns: (MoyaMapperResult, Model) func mapObjResult < T : Modelable >( _ type : T . Type , params : ModelableParamsBlock ? = nil ) -> ( MoyaMapperResult , T ) Response \u8f6c\u6362\u4e3a \u5143\u7956 ((Bool, String), Model) type \u9075\u5b88\u4e86 Modelable \u534f\u8bae\u7684\u6a21\u578b\u7c7b\u578b params \u7528\u4e8e\u6307\u5b9a\u7279\u6b8a\u53d6\u503c\u8def\u5f84\uff0c\u5982\u679c\u4e3a nil \uff0c\u5219\u53d6\u5f53\u524d Response \u7684 ModelableParameterType \u4e3a\u53d6\u503c\u4f9d\u636e ps: \u5f53\u524d Response \u7684 ModelableParameterType \u53ef\u4ee5\u901a\u8fc7 MoyaMapperPlugin \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e Example \u00b6 struct MMModel : Modelable { var name : String var organization : String var logoUrl : String var github : String var avatar : String var author : String var age : Int init ( _ json : JSON ) { name = json [ \"name\" ]. stringValue organization = json [ \"organization\" ]. stringValue logoUrl = json [ \"logoUrl\" ]. stringValue github = json [ \"github\" ]. stringValue avatar = json [ \"avatar\" ]. stringValue author = json [ \"author\" ]. stringValue age = json [ \"age\" ]. intValue } } // MARK: - \u81ea\u5b9a\u4e49\u7f51\u7edc\u7ed3\u679c\u53c2\u6570 struct CustomNetParameter : ModelableParameterType { var successValue = \"000\" var statusCodeKey = \"retStatus\" var tipStrKey = \"retMsg\" var modelKey = \"retBody\" } \u8f6c\u6a21\u578b let ( result , model ) = response . mapObjResult ( MMModel . self ) { CustomNetParameter () } print ( \"result -- \\( result ) \" ) print ( \"name -- \\( model . name ) \" ) \u6253\u5370\u7ed3\u679c result -- (true, \"\u83b7\u53d6\u6570\u636e\u6210\u529f\") name -- MoyaMapper","title":"mapObjResult"},{"location":"core/mapObjResult/#core-mapobjresult","text":"/// Response -> (MoyaMapperResult, Model) /// /// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - params: \u81ea\u5b9a\u4e49\u89e3\u6790\u7684\u8bbe\u7f6e\u56de\u8c03 /// - Returns: (MoyaMapperResult, Model) func mapObjResult < T : Modelable >( _ type : T . Type , params : ModelableParamsBlock ? = nil ) -> ( MoyaMapperResult , T ) Response \u8f6c\u6362\u4e3a \u5143\u7956 ((Bool, String), Model) type \u9075\u5b88\u4e86 Modelable \u534f\u8bae\u7684\u6a21\u578b\u7c7b\u578b params \u7528\u4e8e\u6307\u5b9a\u7279\u6b8a\u53d6\u503c\u8def\u5f84\uff0c\u5982\u679c\u4e3a nil \uff0c\u5219\u53d6\u5f53\u524d Response \u7684 ModelableParameterType \u4e3a\u53d6\u503c\u4f9d\u636e ps: \u5f53\u524d Response \u7684 ModelableParameterType \u53ef\u4ee5\u901a\u8fc7 MoyaMapperPlugin \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e","title":"Core-mapObjResult"},{"location":"core/mapObjResult/#example","text":"struct MMModel : Modelable { var name : String var organization : String var logoUrl : String var github : String var avatar : String var author : String var age : Int init ( _ json : JSON ) { name = json [ \"name\" ]. stringValue organization = json [ \"organization\" ]. stringValue logoUrl = json [ \"logoUrl\" ]. stringValue github = json [ \"github\" ]. stringValue avatar = json [ \"avatar\" ]. stringValue author = json [ \"author\" ]. stringValue age = json [ \"age\" ]. intValue } } // MARK: - \u81ea\u5b9a\u4e49\u7f51\u7edc\u7ed3\u679c\u53c2\u6570 struct CustomNetParameter : ModelableParameterType { var successValue = \"000\" var statusCodeKey = \"retStatus\" var tipStrKey = \"retMsg\" var modelKey = \"retBody\" } \u8f6c\u6a21\u578b let ( result , model ) = response . mapObjResult ( MMModel . self ) { CustomNetParameter () } print ( \"result -- \\( result ) \" ) print ( \"name -- \\( model . name ) \" ) \u6253\u5370\u7ed3\u679c result -- (true, \"\u83b7\u53d6\u6570\u636e\u6210\u529f\") name -- MoyaMapper","title":"Example"},{"location":"core/mapObject/","text":"Core-mapObject \u00b6 /// Response -> Model /// /// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - modelKey: \u6a21\u578b\u6570\u636e\u8def\u5f84 /// - Returns: \u6a21\u578b func mapObject < T : Modelable >( _ type : T . Type , modelKey : String ? = nil ) -> T Response \u8f6c\u6362\u4e3a \u9075\u5b88 Modelable \u534f\u8bae\u7684 Model type \u9075\u5b88\u4e86 Modelable \u534f\u8bae\u7684\u6a21\u578b\u7c7b\u578b modelKey \u6307\u5b9a\u53d6\u503c\u8def\u5f84\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u591a\u7ea7\uff0c\u5982 retBody>name \uff0c\u5982\u679c\u4e3a nil \uff0c\u5219\u53d6\u5f53\u524d Response \u4e0b ModelableParameterType \u7684 modelKey ps: \u5f53\u524d Response \u7684 ModelableParameterType \u53ef\u4ee5\u901a\u8fc7 MoyaMapperPlugin \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e Example \u00b6 struct MMModel : Modelable { var name : String var organization : String var logoUrl : String var github : String var avatar : String var author : String var age : Int init ( _ json : JSON ) { name = json [ \"name\" ]. stringValue organization = json [ \"organization\" ]. stringValue logoUrl = json [ \"logoUrl\" ]. stringValue github = json [ \"github\" ]. stringValue avatar = json [ \"avatar\" ]. stringValue author = json [ \"author\" ]. stringValue age = json [ \"age\" ]. intValue } } \u8f6c\u6a21\u578b // \u5982\u679c\u4e0d\u4f20 modelKey\uff0c\u5219\u53d6\u5f53\u524d response \u4e0b ModelableParameterType \u7684 modelKey let model = response . mapObject ( MMModel . self , modelKey : \"retBody\" ) print ( \"name -- \\( model . name ) \" ) print ( \"github -- \\( model . github ) \" ) print ( \"author -- \\( model . author ) \" ) print ( \"age -- \\( model . age ) \" ) \u6253\u5370\u7ed3\u679c name -- MoyaMapper github -- https://github.com/LinXunFeng author -- LinXunFeng age -- 23","title":"mapObject"},{"location":"core/mapObject/#core-mapobject","text":"/// Response -> Model /// /// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - modelKey: \u6a21\u578b\u6570\u636e\u8def\u5f84 /// - Returns: \u6a21\u578b func mapObject < T : Modelable >( _ type : T . Type , modelKey : String ? = nil ) -> T Response \u8f6c\u6362\u4e3a \u9075\u5b88 Modelable \u534f\u8bae\u7684 Model type \u9075\u5b88\u4e86 Modelable \u534f\u8bae\u7684\u6a21\u578b\u7c7b\u578b modelKey \u6307\u5b9a\u53d6\u503c\u8def\u5f84\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u591a\u7ea7\uff0c\u5982 retBody>name \uff0c\u5982\u679c\u4e3a nil \uff0c\u5219\u53d6\u5f53\u524d Response \u4e0b ModelableParameterType \u7684 modelKey ps: \u5f53\u524d Response \u7684 ModelableParameterType \u53ef\u4ee5\u901a\u8fc7 MoyaMapperPlugin \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e","title":"Core-mapObject"},{"location":"core/mapObject/#example","text":"struct MMModel : Modelable { var name : String var organization : String var logoUrl : String var github : String var avatar : String var author : String var age : Int init ( _ json : JSON ) { name = json [ \"name\" ]. stringValue organization = json [ \"organization\" ]. stringValue logoUrl = json [ \"logoUrl\" ]. stringValue github = json [ \"github\" ]. stringValue avatar = json [ \"avatar\" ]. stringValue author = json [ \"author\" ]. stringValue age = json [ \"age\" ]. intValue } } \u8f6c\u6a21\u578b // \u5982\u679c\u4e0d\u4f20 modelKey\uff0c\u5219\u53d6\u5f53\u524d response \u4e0b ModelableParameterType \u7684 modelKey let model = response . mapObject ( MMModel . self , modelKey : \"retBody\" ) print ( \"name -- \\( model . name ) \" ) print ( \"github -- \\( model . github ) \" ) print ( \"author -- \\( model . author ) \" ) print ( \"age -- \\( model . age ) \" ) \u6253\u5370\u7ed3\u679c name -- MoyaMapper github -- https://github.com/LinXunFeng author -- LinXunFeng age -- 23","title":"Example"},{"location":"core/mapResult/","text":"Core-mapResult \u00b6 typealias MoyaMapperResult = ( Bool , String ) typealias ModelableParamsBlock = ()->( ModelableParameterType ) /// Response -> MoyaMapperResult /// /// - Parameter params: \u81ea\u5b9a\u4e49\u89e3\u6790\u7684\u8bbe\u7f6e\u56de\u8c03 /// - Returns: MoyaMapperResult func mapResult ( params : ModelableParamsBlock ? = nil ) -> MoyaMapperResult Response \u8f6c\u6362\u4e3a\u5143\u7956 MoyaMapperResult param1 : Bool \u670d\u52a1\u5668\u8fd4\u56de\u7684\u8bf7\u6c42\u72b6\u6001\u7801\u662f\u5426\u4e0e\u9884\u5148\u8bbe\u7f6e\u7684\u6210\u529f\u72b6\u6001\u7801\u4e00\u81f4 param2 : String \u670d\u52a1\u5668\u8fd4\u56de\u7684\u63d0\u793a\u8bed params \u7528\u4e8e\u6307\u5b9a\u7279\u6b8a\u53d6\u503c\u8def\u5f84\uff0c\u5728\u8fd9\u91cc\u4e3b\u8981\u6307\u5b9a successValue statusCodeKey tipStrKey \u5982\u679c\u4e3a nil \uff0c\u5219\u53d6\u5f53\u524d Response \u7684 ModelableParameterType \u4e3a\u53d6\u503c\u4f9d\u636e ps: \u5f53\u524d Response \u7684 ModelableParameterType \u53ef\u4ee5\u901a\u8fc7 MoyaMapperPlugin \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e Example \u00b6 \u91cd\u65b0\u5b9a\u4e49\u4e00\u4e2a ModelableParameterType // MARK: - \u81ea\u5b9a\u4e49\u7f51\u7edc\u7ed3\u679c\u53c2\u6570 struct CustomNetParameter : ModelableParameterType { var successValue = \"000\" var statusCodeKey = \"retStatus\" var tipStrKey = \"retMsg\" } \u8c03\u7528 mapResult \u5e76\u5728\u95ed\u5305\u4e2d\u8fd4\u56de ModelableParameterType \u5b9e\u4f8b let ( isSuccess , tipStr ) = response . mapResult { CustomNetParameter () } print ( \"isSuccess -- \\( isSuccess ) \" ) print ( \"tipStr -- \\( tipStr ) \" ) \u6253\u5370\u7ed3\u679c isSuccess -- true tipStr -- \u83b7\u53d6\u6570\u636e\u6210\u529f","title":"mapResult"},{"location":"core/mapResult/#core-mapresult","text":"typealias MoyaMapperResult = ( Bool , String ) typealias ModelableParamsBlock = ()->( ModelableParameterType ) /// Response -> MoyaMapperResult /// /// - Parameter params: \u81ea\u5b9a\u4e49\u89e3\u6790\u7684\u8bbe\u7f6e\u56de\u8c03 /// - Returns: MoyaMapperResult func mapResult ( params : ModelableParamsBlock ? = nil ) -> MoyaMapperResult Response \u8f6c\u6362\u4e3a\u5143\u7956 MoyaMapperResult param1 : Bool \u670d\u52a1\u5668\u8fd4\u56de\u7684\u8bf7\u6c42\u72b6\u6001\u7801\u662f\u5426\u4e0e\u9884\u5148\u8bbe\u7f6e\u7684\u6210\u529f\u72b6\u6001\u7801\u4e00\u81f4 param2 : String \u670d\u52a1\u5668\u8fd4\u56de\u7684\u63d0\u793a\u8bed params \u7528\u4e8e\u6307\u5b9a\u7279\u6b8a\u53d6\u503c\u8def\u5f84\uff0c\u5728\u8fd9\u91cc\u4e3b\u8981\u6307\u5b9a successValue statusCodeKey tipStrKey \u5982\u679c\u4e3a nil \uff0c\u5219\u53d6\u5f53\u524d Response \u7684 ModelableParameterType \u4e3a\u53d6\u503c\u4f9d\u636e ps: \u5f53\u524d Response \u7684 ModelableParameterType \u53ef\u4ee5\u901a\u8fc7 MoyaMapperPlugin \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e","title":"Core-mapResult"},{"location":"core/mapResult/#example","text":"\u91cd\u65b0\u5b9a\u4e49\u4e00\u4e2a ModelableParameterType // MARK: - \u81ea\u5b9a\u4e49\u7f51\u7edc\u7ed3\u679c\u53c2\u6570 struct CustomNetParameter : ModelableParameterType { var successValue = \"000\" var statusCodeKey = \"retStatus\" var tipStrKey = \"retMsg\" } \u8c03\u7528 mapResult \u5e76\u5728\u95ed\u5305\u4e2d\u8fd4\u56de ModelableParameterType \u5b9e\u4f8b let ( isSuccess , tipStr ) = response . mapResult { CustomNetParameter () } print ( \"isSuccess -- \\( isSuccess ) \" ) print ( \"tipStr -- \\( tipStr ) \" ) \u6253\u5370\u7ed3\u679c isSuccess -- true tipStr -- \u83b7\u53d6\u6570\u636e\u6210\u529f","title":"Example"},{"location":"core/toJSON/","text":"Core-toJSON \u00b6 /// Response -> JSON /// /// - Parameter modelKey: \u6a21\u578b\u6570\u636e\u8def\u5f84 /// - Returns: JSON\u5bf9\u8c61 func toJSON ( modelKey : String ? = nil ) -> JSON Response \u8f6c\u6362\u4e3a JSON \u8fd4\u56de\u503c \u4e3a SwiftyJSON \u7684 JSON \u5bf9\u8c61 modelKey \u7528\u4e8e\u6307\u5b9a\u7279\u6b8a\u53d6\u503c\u8def\u5f84\uff0c\u5728\u8fd9\u91cc\u4e3b\u8981\u6307\u5b9a ModelableParameterType \u7684 modelKey \u5982\u679c\u4e3a nil \uff0c\u5219\u53d6\u5f53\u524d Response \u7684 ModelableParameterType \u4e3a\u53d6\u503c\u4f9d\u636e ps: \u5f53\u524d Response \u7684 ModelableParameterType \u53ef\u4ee5\u901a\u8fc7 MoyaMapperPlugin \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e Example \u00b6 \u8c03\u7528 toJSON \u5e76\u4f20\u5165\u9700\u8981\u6307\u5b9a\u7684 modelKey let json = response . toJSON ( modelKey : \"retBody\" ) let name = json [ \"author\" ]. stringValue let age = json [ \"age\" ]. intValue print ( \"author -- \\( name ) \" ) print ( \"age -- \\( age ) \" ) \u6253\u5370\u7ed3\u679c author -- LinXunFeng age -- 23","title":"toJSON"},{"location":"core/toJSON/#core-tojson","text":"/// Response -> JSON /// /// - Parameter modelKey: \u6a21\u578b\u6570\u636e\u8def\u5f84 /// - Returns: JSON\u5bf9\u8c61 func toJSON ( modelKey : String ? = nil ) -> JSON Response \u8f6c\u6362\u4e3a JSON \u8fd4\u56de\u503c \u4e3a SwiftyJSON \u7684 JSON \u5bf9\u8c61 modelKey \u7528\u4e8e\u6307\u5b9a\u7279\u6b8a\u53d6\u503c\u8def\u5f84\uff0c\u5728\u8fd9\u91cc\u4e3b\u8981\u6307\u5b9a ModelableParameterType \u7684 modelKey \u5982\u679c\u4e3a nil \uff0c\u5219\u53d6\u5f53\u524d Response \u7684 ModelableParameterType \u4e3a\u53d6\u503c\u4f9d\u636e ps: \u5f53\u524d Response \u7684 ModelableParameterType \u53ef\u4ee5\u901a\u8fc7 MoyaMapperPlugin \u8fdb\u884c\u7edf\u4e00\u8bbe\u7f6e","title":"Core-toJSON"},{"location":"core/toJSON/#example","text":"\u8c03\u7528 toJSON \u5e76\u4f20\u5165\u9700\u8981\u6307\u5b9a\u7684 modelKey let json = response . toJSON ( modelKey : \"retBody\" ) let name = json [ \"author\" ]. stringValue let age = json [ \"age\" ]. intValue print ( \"author -- \\( name ) \" ) print ( \"age -- \\( age ) \" ) \u6253\u5370\u7ed3\u679c author -- LinXunFeng age -- 23","title":"Example"},{"location":"rx/fetchJSONString/","text":"Rx-fetchJSONString \u00b6 /// \u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u7684\u539f\u59cbjson\u5b57\u7b26\u4e32 /// /// - Parameters: /// - path: JSON\u6570\u636e\u8def\u5f84 (\u9ed8\u8ba4\u4e3a\u6a21\u578b\u6570\u636e\u8def\u5f84) /// - keys: \u76ee\u6807\u6570\u636e\u5b50\u8def\u5f84 (\u4f8b\uff1a [0, \"_id\"]) func fetchJSONString ( path : String ? = nil , keys : [ JSONSubscriptType ] = []) -> Observable < String > func fetchJSONString ( path : String ? = nil , keys : [ JSONSubscriptType ] = []) -> Single < String > \u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Core \u76ee\u5f55\u4e0b\u7684 fetchJSONString \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0 Example \u00b6 let rxRequest : Single < Response > \"\" rxRequest . fetchJSONString () . subscribe ( onSuccess : { json in print ( \"json -- \\( json ) \" ) }). disposed ( by : disposeBag json -- { \"retStatus\" : \"000\", \"retMsg\" : \"\u83b7\u53d6\u6570\u636e\u6210\u529f\", \"retBody\" : { \"name\" : \"MoyaMapper\", \"organization\" : \"https:\\/\\/github.com\\/MoyaMapper\", \"github\" : \"https:\\/\\/github.com\\/LinXunFeng\", \"avatar\" : \"https:\\/\\/avatars0.githubusercontent.com\\/u\\/19367531?s=460&v=4\", \"age\" : 23, \"author\" : \"LinXunFeng\", \"logoUrl\" : \"https:\\/\\/github.com\\/MoyaMapper\\/MoyaMapper.github.io\\/raw\\/master\\/img\\/MoyaMapper.png\" } } \"retBody\" rxRequest.fetchJSONString(path: \"retBody\", keys: []) .subscribe(onSuccess: { json in print(\"json -- \\(json)\") }).disposed(by: disposeBag json -- { \"name\" : \"MoyaMapper\", \"organization\" : \"https:\\/\\/github.com\\/MoyaMapper\", \"github\" : \"https:\\/\\/github.com\\/LinXunFeng\", \"avatar\" : \"https:\\/\\/avatars0.githubusercontent.com\\/u\\/19367531?s=460&v=4\", \"age\" : 23, \"author\" : \"LinXunFeng\", \"logoUrl\" : \"https:\\/\\/github.com\\/MoyaMapper\\/MoyaMapper.github.io\\/raw\\/master\\/img\\/MoyaMapper.png\" }","title":"fetchJSONString"},{"location":"rx/fetchJSONString/#rx-fetchjsonstring","text":"/// \u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u7684\u539f\u59cbjson\u5b57\u7b26\u4e32 /// /// - Parameters: /// - path: JSON\u6570\u636e\u8def\u5f84 (\u9ed8\u8ba4\u4e3a\u6a21\u578b\u6570\u636e\u8def\u5f84) /// - keys: \u76ee\u6807\u6570\u636e\u5b50\u8def\u5f84 (\u4f8b\uff1a [0, \"_id\"]) func fetchJSONString ( path : String ? = nil , keys : [ JSONSubscriptType ] = []) -> Observable < String > func fetchJSONString ( path : String ? = nil , keys : [ JSONSubscriptType ] = []) -> Single < String > \u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Core \u76ee\u5f55\u4e0b\u7684 fetchJSONString \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0","title":"Rx-fetchJSONString"},{"location":"rx/fetchJSONString/#example","text":"let rxRequest : Single < Response > \"\" rxRequest . fetchJSONString () . subscribe ( onSuccess : { json in print ( \"json -- \\( json ) \" ) }). disposed ( by : disposeBag json -- { \"retStatus\" : \"000\", \"retMsg\" : \"\u83b7\u53d6\u6570\u636e\u6210\u529f\", \"retBody\" : { \"name\" : \"MoyaMapper\", \"organization\" : \"https:\\/\\/github.com\\/MoyaMapper\", \"github\" : \"https:\\/\\/github.com\\/LinXunFeng\", \"avatar\" : \"https:\\/\\/avatars0.githubusercontent.com\\/u\\/19367531?s=460&v=4\", \"age\" : 23, \"author\" : \"LinXunFeng\", \"logoUrl\" : \"https:\\/\\/github.com\\/MoyaMapper\\/MoyaMapper.github.io\\/raw\\/master\\/img\\/MoyaMapper.png\" } } \"retBody\" rxRequest.fetchJSONString(path: \"retBody\", keys: []) .subscribe(onSuccess: { json in print(\"json -- \\(json)\") }).disposed(by: disposeBag json -- { \"name\" : \"MoyaMapper\", \"organization\" : \"https:\\/\\/github.com\\/MoyaMapper\", \"github\" : \"https:\\/\\/github.com\\/LinXunFeng\", \"avatar\" : \"https:\\/\\/avatars0.githubusercontent.com\\/u\\/19367531?s=460&v=4\", \"age\" : 23, \"author\" : \"LinXunFeng\", \"logoUrl\" : \"https:\\/\\/github.com\\/MoyaMapper\\/MoyaMapper.github.io\\/raw\\/master\\/img\\/MoyaMapper.png\" }","title":"Example"},{"location":"rx/fetchString/","text":"Rx-fetchString \u00b6 /// \u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u7684\u5b57\u7b26\u4e32 /// /// - Parameters: /// - path: JSON\u6570\u636e\u8def\u5f84 (\u9ed8\u8ba4\u4e3a\u6a21\u578b\u6570\u636e\u8def\u5f84) /// - keys: \u76ee\u6807\u6570\u636e\u5b50\u8def\u5f84 (\u4f8b\uff1a [0, \"_id\"]) func fetchString ( path : String ? = nil , keys : [ JSONSubscriptType ] = []) -> Observable < String > func fetchString ( path : String ? = nil , keys : [ JSONSubscriptType ] = []) -> Single < String > \u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Core \u76ee\u5f55\u4e0b\u7684 fetchString \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0 Example \u00b6 let rxRequest : Single < Response > rxRequest . fetchString ( path : \"retBody>name\" ) . subscribe ( onSuccess : { str in print ( \"name -- \\( str ) \" ) }). disposed ( by : disposeBag ) // name -- MoyaMapper rxRequest . fetchString ( path : \"retBody\" , keys : [ 1 , \"github\" ]) . subscribe ( onSuccess : { str in print ( \"github -- \\( str ) \" ) }). disposed ( by : disposeBag ) // github -- https://github.com/LinXunFeng/RxSwiftDemo","title":"fetchString"},{"location":"rx/fetchString/#rx-fetchstring","text":"/// \u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u7684\u5b57\u7b26\u4e32 /// /// - Parameters: /// - path: JSON\u6570\u636e\u8def\u5f84 (\u9ed8\u8ba4\u4e3a\u6a21\u578b\u6570\u636e\u8def\u5f84) /// - keys: \u76ee\u6807\u6570\u636e\u5b50\u8def\u5f84 (\u4f8b\uff1a [0, \"_id\"]) func fetchString ( path : String ? = nil , keys : [ JSONSubscriptType ] = []) -> Observable < String > func fetchString ( path : String ? = nil , keys : [ JSONSubscriptType ] = []) -> Single < String > \u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Core \u76ee\u5f55\u4e0b\u7684 fetchString \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0","title":"Rx-fetchString"},{"location":"rx/fetchString/#example","text":"let rxRequest : Single < Response > rxRequest . fetchString ( path : \"retBody>name\" ) . subscribe ( onSuccess : { str in print ( \"name -- \\( str ) \" ) }). disposed ( by : disposeBag ) // name -- MoyaMapper rxRequest . fetchString ( path : \"retBody\" , keys : [ 1 , \"github\" ]) . subscribe ( onSuccess : { str in print ( \"github -- \\( str ) \" ) }). disposed ( by : disposeBag ) // github -- https://github.com/LinXunFeng/RxSwiftDemo","title":"Example"},{"location":"rx/mapArray/","text":"Rx-mapArray \u00b6 /// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - modelKey: \u6a21\u578b\u8def\u5f84 public func mapArray < T : Modelable >( _ type : T . Type , modelKey : String ? = nil ) -> Observable < [ T ] > public func mapArray < T : Modelable >( _ type : T . Type , modelKey : String ? = nil ) -> Single < [ T ] > \u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Core \u76ee\u5f55\u4e0b\u7684 mapArray \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0 Example \u00b6 let rxRequest : Single < Response > struct MMModel : Modelable { var name : String var organization : String var logoUrl : String var github : String var avatar : String var author : String var age : Int init ( _ json : JSON ) { name = json [ \"name\" ]. stringValue organization = json [ \"organization\" ]. stringValue logoUrl = json [ \"logoUrl\" ]. stringValue github = json [ \"github\" ]. stringValue avatar = json [ \"avatar\" ]. stringValue author = json [ \"author\" ]. stringValue age = json [ \"age\" ]. intValue } } \u8f6c\u6a21\u578b\u6570\u7ec4 rxRequest . mapArray ( MMModel . self , modelKey : \"retBody\" ) . subscribe ( onSuccess : { models in let name = models [ 0 ]. name print ( \"count -- \\( models . count ) \" ) print ( \"name -- \\( name ) \" ) }). disposed ( by : disposeBag ) \u6253\u5370\u7ed3\u679c count -- 4 name -- MoyaMapper","title":"mapArray"},{"location":"rx/mapArray/#rx-maparray","text":"/// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - modelKey: \u6a21\u578b\u8def\u5f84 public func mapArray < T : Modelable >( _ type : T . Type , modelKey : String ? = nil ) -> Observable < [ T ] > public func mapArray < T : Modelable >( _ type : T . Type , modelKey : String ? = nil ) -> Single < [ T ] > \u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Core \u76ee\u5f55\u4e0b\u7684 mapArray \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0","title":"Rx-mapArray"},{"location":"rx/mapArray/#example","text":"let rxRequest : Single < Response > struct MMModel : Modelable { var name : String var organization : String var logoUrl : String var github : String var avatar : String var author : String var age : Int init ( _ json : JSON ) { name = json [ \"name\" ]. stringValue organization = json [ \"organization\" ]. stringValue logoUrl = json [ \"logoUrl\" ]. stringValue github = json [ \"github\" ]. stringValue avatar = json [ \"avatar\" ]. stringValue author = json [ \"author\" ]. stringValue age = json [ \"age\" ]. intValue } } \u8f6c\u6a21\u578b\u6570\u7ec4 rxRequest . mapArray ( MMModel . self , modelKey : \"retBody\" ) . subscribe ( onSuccess : { models in let name = models [ 0 ]. name print ( \"count -- \\( models . count ) \" ) print ( \"name -- \\( name ) \" ) }). disposed ( by : disposeBag ) \u6253\u5370\u7ed3\u679c count -- 4 name -- MoyaMapper","title":"Example"},{"location":"rx/mapArrayResult/","text":"Rx-mapArrayResult \u00b6 /// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - params: \u81ea\u5b9a\u4e49\u89e3\u6790\u7684\u8bbe\u7f6e\u56de\u8c03 func mapArrayResult < T : Modelable >( _ type : T . Type , params : ModelableParamsBlock ? = nil ) -> Observable < ( MoyaMapperResult ,[ T ]) > func mapArrayResult < T : Modelable >( _ type : T . Type , params : ModelableParamsBlock ? = nil ) -> Single < ( MoyaMapperResult ,[ T ]) > \u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Core \u76ee\u5f55\u4e0b\u7684 mapArrayResult \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0 Example \u00b6 let rxRequest : Single < Response > struct MMModel : Modelable { var name : String var organization : String var logoUrl : String var github : String var avatar : String var author : String var age : Int init ( _ json : JSON ) { name = json [ \"name\" ]. stringValue organization = json [ \"organization\" ]. stringValue logoUrl = json [ \"logoUrl\" ]. stringValue github = json [ \"github\" ]. stringValue avatar = json [ \"avatar\" ]. stringValue author = json [ \"author\" ]. stringValue age = json [ \"age\" ]. intValue } } // MARK: - \u81ea\u5b9a\u4e49\u7f51\u7edc\u7ed3\u679c\u53c2\u6570 struct CustomNetParameter : ModelableParameterType { var successValue = \"000\" var statusCodeKey = \"retStatus\" var tipStrKey = \"retMsg\" var modelKey = \"retBody\" } \u8f6c MoyaMapperResult + \u6a21\u578b\u6570\u7ec4 rxRequest . mapArrayResult ( MMModel . self ) { CustomNetParameter () } . subscribe ( onSuccess : { ( result , models ) in let name = models [ 0 ]. name print ( \"result -- \\( result ) \" ) print ( \"count -- \\( models . count ) \" ) print ( \"name -- \\( name ) \" ) }). disposed ( by : disposeBag ) \u6253\u5370\u7ed3\u679c result -- (true, \"\u83b7\u53d6\u6570\u636e\u6210\u529f\") count -- 4 name -- MoyaMapper","title":"mapArrayResult"},{"location":"rx/mapArrayResult/#rx-maparrayresult","text":"/// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - params: \u81ea\u5b9a\u4e49\u89e3\u6790\u7684\u8bbe\u7f6e\u56de\u8c03 func mapArrayResult < T : Modelable >( _ type : T . Type , params : ModelableParamsBlock ? = nil ) -> Observable < ( MoyaMapperResult ,[ T ]) > func mapArrayResult < T : Modelable >( _ type : T . Type , params : ModelableParamsBlock ? = nil ) -> Single < ( MoyaMapperResult ,[ T ]) > \u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Core \u76ee\u5f55\u4e0b\u7684 mapArrayResult \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0","title":"Rx-mapArrayResult"},{"location":"rx/mapArrayResult/#example","text":"let rxRequest : Single < Response > struct MMModel : Modelable { var name : String var organization : String var logoUrl : String var github : String var avatar : String var author : String var age : Int init ( _ json : JSON ) { name = json [ \"name\" ]. stringValue organization = json [ \"organization\" ]. stringValue logoUrl = json [ \"logoUrl\" ]. stringValue github = json [ \"github\" ]. stringValue avatar = json [ \"avatar\" ]. stringValue author = json [ \"author\" ]. stringValue age = json [ \"age\" ]. intValue } } // MARK: - \u81ea\u5b9a\u4e49\u7f51\u7edc\u7ed3\u679c\u53c2\u6570 struct CustomNetParameter : ModelableParameterType { var successValue = \"000\" var statusCodeKey = \"retStatus\" var tipStrKey = \"retMsg\" var modelKey = \"retBody\" } \u8f6c MoyaMapperResult + \u6a21\u578b\u6570\u7ec4 rxRequest . mapArrayResult ( MMModel . self ) { CustomNetParameter () } . subscribe ( onSuccess : { ( result , models ) in let name = models [ 0 ]. name print ( \"result -- \\( result ) \" ) print ( \"count -- \\( models . count ) \" ) print ( \"name -- \\( name ) \" ) }). disposed ( by : disposeBag ) \u6253\u5370\u7ed3\u679c result -- (true, \"\u83b7\u53d6\u6570\u636e\u6210\u529f\") count -- 4 name -- MoyaMapper","title":"Example"},{"location":"rx/mapObjResult/","text":"Rx-mapObjResult \u00b6 /// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - params: \u81ea\u5b9a\u4e49\u89e3\u6790\u7684\u8bbe\u7f6e\u56de\u8c03 func mapObjResult < T : Modelable >( _ type : T . Type , params : ModelableParamsBlock ? = nil ) -> Observable < ( MoyaMapperResult , T ) > func mapObjResult < T : Modelable >( _ type : T . Type , params : ModelableParamsBlock ? = nil ) -> Single < ( MoyaMapperResult , T ) > \u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Core \u76ee\u5f55\u4e0b\u7684 mapObjResult \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0 Example \u00b6 let rxRequest : Single < Response > struct MMModel : Modelable { var name : String var organization : String var logoUrl : String var github : String var avatar : String var author : String var age : Int init ( _ json : JSON ) { name = json [ \"name\" ]. stringValue organization = json [ \"organization\" ]. stringValue logoUrl = json [ \"logoUrl\" ]. stringValue github = json [ \"github\" ]. stringValue avatar = json [ \"avatar\" ]. stringValue author = json [ \"author\" ]. stringValue age = json [ \"age\" ]. intValue } } // MARK: - \u81ea\u5b9a\u4e49\u7f51\u7edc\u7ed3\u679c\u53c2\u6570 struct CustomNetParameter : ModelableParameterType { var successValue = \"000\" var statusCodeKey = \"retStatus\" var tipStrKey = \"retMsg\" var modelKey = \"retBody\" } \u8f6c\u6a21\u578b rxRequest . mapObjResult ( MMModel . self ) { CustomNetParameter () } . subscribe ( onSuccess : { ( result , model ) in print ( \"result -- \\( result ) \" ) print ( \"name -- \\( model . name ) \" ) }). disposed ( by : disposeBag ) \u6253\u5370\u7ed3\u679c result -- (true, \"\u83b7\u53d6\u6570\u636e\u6210\u529f\") name -- MoyaMapper","title":"mapObjResult"},{"location":"rx/mapObjResult/#rx-mapobjresult","text":"/// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - params: \u81ea\u5b9a\u4e49\u89e3\u6790\u7684\u8bbe\u7f6e\u56de\u8c03 func mapObjResult < T : Modelable >( _ type : T . Type , params : ModelableParamsBlock ? = nil ) -> Observable < ( MoyaMapperResult , T ) > func mapObjResult < T : Modelable >( _ type : T . Type , params : ModelableParamsBlock ? = nil ) -> Single < ( MoyaMapperResult , T ) > \u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Core \u76ee\u5f55\u4e0b\u7684 mapObjResult \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0","title":"Rx-mapObjResult"},{"location":"rx/mapObjResult/#example","text":"let rxRequest : Single < Response > struct MMModel : Modelable { var name : String var organization : String var logoUrl : String var github : String var avatar : String var author : String var age : Int init ( _ json : JSON ) { name = json [ \"name\" ]. stringValue organization = json [ \"organization\" ]. stringValue logoUrl = json [ \"logoUrl\" ]. stringValue github = json [ \"github\" ]. stringValue avatar = json [ \"avatar\" ]. stringValue author = json [ \"author\" ]. stringValue age = json [ \"age\" ]. intValue } } // MARK: - \u81ea\u5b9a\u4e49\u7f51\u7edc\u7ed3\u679c\u53c2\u6570 struct CustomNetParameter : ModelableParameterType { var successValue = \"000\" var statusCodeKey = \"retStatus\" var tipStrKey = \"retMsg\" var modelKey = \"retBody\" } \u8f6c\u6a21\u578b rxRequest . mapObjResult ( MMModel . self ) { CustomNetParameter () } . subscribe ( onSuccess : { ( result , model ) in print ( \"result -- \\( result ) \" ) print ( \"name -- \\( model . name ) \" ) }). disposed ( by : disposeBag ) \u6253\u5370\u7ed3\u679c result -- (true, \"\u83b7\u53d6\u6570\u636e\u6210\u529f\") name -- MoyaMapper","title":"Example"},{"location":"rx/mapObject/","text":"Rx-mapObject \u00b6 /// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - modelKey: \u6a21\u578b\u6570\u636e\u8def\u5f84 func mapObject < T : Modelable >( _ type : T . Type , modelKey : String ? = nil ) -> Observable < T > func mapObject < T : Modelable >( _ type : T . Type , modelKey : String ? = nil ) -> Single < T > \u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Core \u76ee\u5f55\u4e0b\u7684 mapObject \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0 Example \u00b6 let rxRequest : Single < Response > struct MMModel : Modelable { var name : String var organization : String var logoUrl : String var github : String var avatar : String var author : String var age : Int init ( _ json : JSON ) { name = json [ \"name\" ]. stringValue organization = json [ \"organization\" ]. stringValue logoUrl = json [ \"logoUrl\" ]. stringValue github = json [ \"github\" ]. stringValue avatar = json [ \"avatar\" ]. stringValue author = json [ \"author\" ]. stringValue age = json [ \"age\" ]. intValue } } \u8f6c\u6a21\u578b rxRequest . mapObject ( MMModel . self , modelKey : \"retBody\" ) . subscribe ( onSuccess : { ( model ) in print ( \"name -- \\( model . name ) \" ) print ( \"github -- \\( model . github ) \" ) print ( \"author -- \\( model . author ) \" ) print ( \"age -- \\( model . age ) \" ) }). disposed ( by : disposeBag ) \u6253\u5370\u7ed3\u679c name -- MoyaMapper github -- https://github.com/LinXunFeng author -- LinXunFeng age -- 23","title":"mapObject"},{"location":"rx/mapObject/#rx-mapobject","text":"/// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - modelKey: \u6a21\u578b\u6570\u636e\u8def\u5f84 func mapObject < T : Modelable >( _ type : T . Type , modelKey : String ? = nil ) -> Observable < T > func mapObject < T : Modelable >( _ type : T . Type , modelKey : String ? = nil ) -> Single < T > \u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Core \u76ee\u5f55\u4e0b\u7684 mapObject \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0","title":"Rx-mapObject"},{"location":"rx/mapObject/#example","text":"let rxRequest : Single < Response > struct MMModel : Modelable { var name : String var organization : String var logoUrl : String var github : String var avatar : String var author : String var age : Int init ( _ json : JSON ) { name = json [ \"name\" ]. stringValue organization = json [ \"organization\" ]. stringValue logoUrl = json [ \"logoUrl\" ]. stringValue github = json [ \"github\" ]. stringValue avatar = json [ \"avatar\" ]. stringValue author = json [ \"author\" ]. stringValue age = json [ \"age\" ]. intValue } } \u8f6c\u6a21\u578b rxRequest . mapObject ( MMModel . self , modelKey : \"retBody\" ) . subscribe ( onSuccess : { ( model ) in print ( \"name -- \\( model . name ) \" ) print ( \"github -- \\( model . github ) \" ) print ( \"author -- \\( model . author ) \" ) print ( \"age -- \\( model . age ) \" ) }). disposed ( by : disposeBag ) \u6253\u5370\u7ed3\u679c name -- MoyaMapper github -- https://github.com/LinXunFeng author -- LinXunFeng age -- 23","title":"Example"},{"location":"rx/mapResult/","text":"Core-mapResult \u00b6 /// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - modelKey: \u6a21\u578b\u6570\u636e\u8def\u5f84 func mapObject < T : Modelable >( _ type : T . Type , modelKey : String ? = nil ) -> Observable < T > func mapObject < T : Modelable >( _ type : T . Type , modelKey : String ? = nil ) -> Single < T > \u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Core \u76ee\u5f55\u4e0b\u7684 mapResult \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0 Example \u00b6 let rxRequest: Single<Response> \u91cd\u65b0\u5b9a\u4e49\u4e00\u4e2a ModelableParameterType // MARK: - \u81ea\u5b9a\u4e49\u7f51\u7edc\u7ed3\u679c\u53c2\u6570 struct CustomNetParameter : ModelableParameterType { var successValue = \"000\" var statusCodeKey = \"retStatus\" var tipStrKey = \"retMsg\" } \u8c03\u7528 mapResult \u5e76\u5728\u95ed\u5305\u4e2d\u8fd4\u56de ModelableParameterType \u5b9e\u4f8b rxRequest . mapResult { CustomNetParameter () } . subscribe ( onSuccess : { ( isSuccess , tipStr ) in print ( \"isSuccess -- \\( isSuccess ) \" ) print ( \"tipStr -- \\( tipStr ) \" ) }). disposed ( by : disposeBag ) \u6253\u5370\u7ed3\u679c isSuccess -- true tipStr -- \u83b7\u53d6\u6570\u636e\u6210\u529f","title":"mapResult"},{"location":"rx/mapResult/#core-mapresult","text":"/// - Parameters: /// - type: \u6a21\u578b\u7c7b\u578b /// - modelKey: \u6a21\u578b\u6570\u636e\u8def\u5f84 func mapObject < T : Modelable >( _ type : T . Type , modelKey : String ? = nil ) -> Observable < T > func mapObject < T : Modelable >( _ type : T . Type , modelKey : String ? = nil ) -> Single < T > \u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Core \u76ee\u5f55\u4e0b\u7684 mapResult \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0","title":"Core-mapResult"},{"location":"rx/mapResult/#example","text":"let rxRequest: Single<Response> \u91cd\u65b0\u5b9a\u4e49\u4e00\u4e2a ModelableParameterType // MARK: - \u81ea\u5b9a\u4e49\u7f51\u7edc\u7ed3\u679c\u53c2\u6570 struct CustomNetParameter : ModelableParameterType { var successValue = \"000\" var statusCodeKey = \"retStatus\" var tipStrKey = \"retMsg\" } \u8c03\u7528 mapResult \u5e76\u5728\u95ed\u5305\u4e2d\u8fd4\u56de ModelableParameterType \u5b9e\u4f8b rxRequest . mapResult { CustomNetParameter () } . subscribe ( onSuccess : { ( isSuccess , tipStr ) in print ( \"isSuccess -- \\( isSuccess ) \" ) print ( \"tipStr -- \\( tipStr ) \" ) }). disposed ( by : disposeBag ) \u6253\u5370\u7ed3\u679c isSuccess -- true tipStr -- \u83b7\u53d6\u6570\u636e\u6210\u529f","title":"Example"},{"location":"rx/toJSON/","text":"Rx-toJSON \u00b6 /// Response -> Observable<JSON> /// /// - Parameter modelKey: \u6a21\u578b\u6570\u636e\u8def\u5f84 func toJSON ( modelKey : String ? = nil ) -> Observable < JSON > func toJSON ( modelKey : String ? = nil ) -> Single < JSON > \u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Core \u76ee\u5f55\u4e0b\u7684 toJSON \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0 let rxRequest : Single < Response > rxRequest . toJSON ( modelKey : \"retBody\" ) . subscribe ( onSuccess : { json in let name = json [ \"author\" ]. stringValue let age = json [ \"age\" ]. intValue print ( \"author -- \\( name ) \" ) print ( \"age -- \\( age ) \" ) }). disposed ( by : disposeBag ) \u6253\u5370\u7ed3\u679c author -- LinXunFeng age -- 23","title":"toJSON"},{"location":"rx/toJSON/#rx-tojson","text":"/// Response -> Observable<JSON> /// /// - Parameter modelKey: \u6a21\u578b\u6570\u636e\u8def\u5f84 func toJSON ( modelKey : String ? = nil ) -> Observable < JSON > func toJSON ( modelKey : String ? = nil ) -> Single < JSON > \u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Core \u76ee\u5f55\u4e0b\u7684 toJSON \uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0 let rxRequest : Single < Response > rxRequest . toJSON ( modelKey : \"retBody\" ) . subscribe ( onSuccess : { json in let name = json [ \"author\" ]. stringValue let age = json [ \"age\" ]. intValue print ( \"author -- \\( name ) \" ) print ( \"age -- \\( age ) \" ) }). disposed ( by : disposeBag ) \u6253\u5370\u7ed3\u679c author -- LinXunFeng age -- 23","title":"Rx-toJSON"}]}