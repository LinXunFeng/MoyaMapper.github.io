{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MoyaMapper\u662f\u57fa\u4e8eMoya\u548cSwiftyJSON\u5c01\u88c5\u7684\u5de5\u5177\uff0c\u4ee5Moya\u7684plugin\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u95f4\u63a5\u89e3\u6790\uff0c\u652f\u6301RxSwift CocoaPods \u00b6 \u9ed8\u8ba4\u5b89\u88c5 MoyaMapper\u9ed8\u8ba4\u53ea\u5b89\u88c5Core\u4e0b\u7684\u6587\u4ef6 pod 'MoyaMapper' RxSwift\u62d3\u5c55 pod 'MoyaMapper/Rx' \u7f13\u5b58\u62d3\u5c55 pod 'MoyaMapper/MMCache' Rx\u7f13\u5b58 pod 'MoyaMapper/RxCache'","title":"Home"},{"location":"#cocoapods","text":"\u9ed8\u8ba4\u5b89\u88c5 MoyaMapper\u9ed8\u8ba4\u53ea\u5b89\u88c5Core\u4e0b\u7684\u6587\u4ef6 pod 'MoyaMapper' RxSwift\u62d3\u5c55 pod 'MoyaMapper/Rx' \u7f13\u5b58\u62d3\u5c55 pod 'MoyaMapper/MMCache' Rx\u7f13\u5b58 pod 'MoyaMapper/RxCache'","title":"CocoaPods"},{"location":"about/","text":"About \u00b6 email: 598600855@qq.com Blogs linxunfeng.top \u6398\u91d1 \u7b80\u4e66","title":"About"},{"location":"about/#about","text":"email: 598600855@qq.com Blogs linxunfeng.top \u6398\u91d1 \u7b80\u4e66","title":"About"},{"location":"cache/","text":"MM-Cache \u00b6","title":"Cache"},{"location":"cache/#mm-cache","text":"","title":"MM-Cache"},{"location":"moyaMapper/","text":"MM-Core \u00b6 \u4e00\u3001\u6ce8\u5165\u63d2\u4ef6 \u00b6 \u5b9a\u4e49\u4e00\u4e2a\u9075\u5b88ModelableParameterType\u534f\u8bae\u7684\u7ed3\u6784\u4f53 // \u5404\u53c2\u6570\u8fd4\u56de\u7684\u5185\u5bb9\u8bf7\u53c2\u8003\u4e0b\u9762JSON\u6570\u636e\u5bf9\u7167\u56fe struct NetParameter : ModelableParameterType { static var successValue : String { return \"false\" } static var statusCodeKey : String { return \"error\" } static var tipStrKey : String { return \"\" } static var modelKey : String { return \"results\" } } \u6b64\u5916\uff0c\u8fd9\u91cc\u8fd8\u53ef\u4ee5\u505a\u7b80\u5355\u7684\u8def\u5f84\u5904\u7406\uff0c\u4ee5\u5e94\u4ed8\u5404\u79cd\u60c5\u51b5\uff0c\u4ee5'>'\u9694\u5f00 // \u5982\uff1a error : { ' errorStatus ' : false ' errMsg ' : ' error Argument type ' } static var tipStrKey : String { return \"error>errMsg\" } \u4ee5plugin\u7684\u65b9\u5f0f\u4f20\u9012\u7ed9MoyaProvider let lxfNetTool = MoyaProvider < LXFNetworkTool >( plugins : [ MoyaMapperPlugin ( NetParameter . self )]) \u4e8c\u3001\u5b9a\u4e49\u6a21\u578b \u00b6 \u521b\u5efa\u4e00\u4e2a\u9075\u5b88Modelable\u534f\u8bae\u7684\u7ed3\u6784\u4f53 struct MyModel : Modelable { var _id : String var address : AddressModel ...... init ?( _ json : JSON ) { self . _id = json [ \"_id\" ]. stringValue self . address = json [ \"address\" ]. modelValue ( AddressModel . self ) ...... } } struct AddressModel : Modelable { var street : String ...... init ( _ json : JSON ) { self . street = json [ \"street\" ]. stringValue ...... } } \u6a21\u578b\u5d4c\u5957\u89e3\u6790 \u4f7f\u7528\u6cdb\u578b\u7684\u65b9\u5f0f\u4e3a JSON \u7c7b\u62d3\u5c55\u4e24\u4e2a\u89e3\u6790\u65b9\u6cd5\uff0c\u4f7f\u89e3\u6790\u6a21\u578b\u5d4c\u5957\u6613\u5982\u53cd\u638c // \u89e3\u6790\u5355\u4e2a\u6a21\u578b modelValue < T : Modelable >( _ type : T . Type ) -> T // \u89e3\u6790\u6570\u7ec4\u6a21\u578b modelsValue < T : Modelable >( _ type : T . Type ) -> [ T ] \u793a\u4f8b\u4ee3\u7801\uff1a self.address = json[\"address\"].modelValue(AddressModel.self) \u4e09\u3001\u89e3\u6790 \u00b6 \u8fd9\u91cc\u53ea\u8d34\u51fa\u4e3b\u8981\u4ee3\u7801 Normal lxfNetTool . request (. data ( type : . all , size : 10 , index : 1 )) { result in guard let response = result . value else { return } // Models let models = response . mapArray ( MyModel . self ) for model in models { print ( \"id -- \\( model . _id ) \" ) } // Result let ( isSuccess , tipStr ) = response . mapResult () print ( \"isSuccess -- \\( isSuccess ) \" ) print ( \"tipStr -- \\( tipStr ) \" ) // Model /* let model = response.mapObjResult(MyModel.self) */ // \u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u7684\u503c // response.fetchJSONString(keys: []]) // response.fetchJSONString(path: \"\", keys: []) // response.fetchString(path: \"\", keys: []) // \u4f7f\u7528\u81ea\u5b9a\u4e49\u6a21\u578b\u53c2\u6570\u7c7b /* let (result, models) = response.mapArrayResult(MyModel.self, params: { () -> (ModelableParameterType.Type) in return CustomParameter.self }) */ } \u8fd4\u56de\u7c7b\u578b\u6ce8\u91ca\uff1a \u00b6 result // static var successValue: String { return \"false\" } // static var statusCodeKey: String { return \"error\" } // static var tipStrKey: String { return \"\" } // \u5143\u7956\u7c7b\u578b // \u53c2\u65701\uff1a\u6839\u636estatusCodeKey\u53d6\u51fa\u7684\u503c\u4e0esuccessValue\u662f\u5426\u76f8\u7b49 // \u53c2\u65702\uff1a\u6839\u636etipStrKey\u53d6\u51fa\u7684\u503c result \uff1a ( Bool , String ) fetchString // fetchJSONString(keys: <[JSONSubscriptType]>) 1 \u3001\u901a\u8fc7 keys \u4f20\u9012\u6570\u7ec4 , \u8be5\u6570\u7ec4\u53ef\u4f20\u5165\u7684\u7c7b\u578b\u4e3a Int \u548c String 2 \u3001\u9ed8\u8ba4\u662f\u4ee5 modelKey \u6240\u793a\u8def\u5f84\uff0c\u6765\u83b7\u53d6\u76f8\u5e94\u7684\u6570\u503c\u3002\u5982\u679c modelKey\u975e\u4f60\u6240\u8981\u7528\u7684\u8d77\u59cb\u8def\u5f84 \uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u65b9\u7684\u91cd\u8f7d\u65b9\u6cd5\u91cd\u65b0\u6307\u5b9a\u8def\u5f84 // response.fetchJSONString(path: <String?>, keys: <[JSONSubscriptType]>) Misc \u00b6 \u81ea\u5b9a\u4e49Response \u00b6 \u5728\u65e0\u7f51\u72b6\u6001\u4e0b\u4f7f\u7528Moya\u53d1\u9001\u8bf7\u6c42\u65f6\uff0cresponse\u4e3anil\uff0c\u5219\u63d2\u4ef6\u5f0f\u6ce8\u5165\u65e0\u6548\u5316\uff0c\u53ef\u4ee5\u5728 catchError \u65b9\u6cd5\u4e2d\u81ea\u5b9a\u4e49 response \u5e76\u8fd4\u56de\u3002\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a rxRequest . catchError { ( error ) -> PrimitiveSequence < SingleTrait , Response > in // \u6355\u83b7\u8bf7\u6c42\u5931\u8d25\uff08\u5982\uff1a\u65e0\u7f51\u72b6\u6001\uff09\uff0c\u81ea\u5b9a\u4e49response let err = error as NSError let resBodyDict = [ \"error\" : \"true\" , \"errMsg\" : err . localizedDescription ] let response = Response ( resBodyDict , statusCode : 203 , parameterType : NetParameter . self ) return Single . just ( response ) }. mapArrayResult ( MyModel . self ). subscribe ( onSuccess : { ( result , models ) in print ( \"isSuccess -- \\( result . 0 ) \" ) print ( \"tipStr -- \\( result . 1 ) \" ) print ( \"models count -- \\( models . count ) \" ) }). disposed ( by : dispseBag ) \u914d\u5408 MoyaSugar \u4f7f\u7528\u66f4\u52a0\u65b9\u4fbf","title":"MoyaMapper"},{"location":"moyaMapper/#mm-core","text":"","title":"MM-Core"},{"location":"moyaMapper/#_1","text":"\u5b9a\u4e49\u4e00\u4e2a\u9075\u5b88ModelableParameterType\u534f\u8bae\u7684\u7ed3\u6784\u4f53 // \u5404\u53c2\u6570\u8fd4\u56de\u7684\u5185\u5bb9\u8bf7\u53c2\u8003\u4e0b\u9762JSON\u6570\u636e\u5bf9\u7167\u56fe struct NetParameter : ModelableParameterType { static var successValue : String { return \"false\" } static var statusCodeKey : String { return \"error\" } static var tipStrKey : String { return \"\" } static var modelKey : String { return \"results\" } } \u6b64\u5916\uff0c\u8fd9\u91cc\u8fd8\u53ef\u4ee5\u505a\u7b80\u5355\u7684\u8def\u5f84\u5904\u7406\uff0c\u4ee5\u5e94\u4ed8\u5404\u79cd\u60c5\u51b5\uff0c\u4ee5'>'\u9694\u5f00 // \u5982\uff1a error : { ' errorStatus ' : false ' errMsg ' : ' error Argument type ' } static var tipStrKey : String { return \"error>errMsg\" } \u4ee5plugin\u7684\u65b9\u5f0f\u4f20\u9012\u7ed9MoyaProvider let lxfNetTool = MoyaProvider < LXFNetworkTool >( plugins : [ MoyaMapperPlugin ( NetParameter . self )])","title":"\u4e00\u3001\u6ce8\u5165\u63d2\u4ef6"},{"location":"moyaMapper/#_2","text":"\u521b\u5efa\u4e00\u4e2a\u9075\u5b88Modelable\u534f\u8bae\u7684\u7ed3\u6784\u4f53 struct MyModel : Modelable { var _id : String var address : AddressModel ...... init ?( _ json : JSON ) { self . _id = json [ \"_id\" ]. stringValue self . address = json [ \"address\" ]. modelValue ( AddressModel . self ) ...... } } struct AddressModel : Modelable { var street : String ...... init ( _ json : JSON ) { self . street = json [ \"street\" ]. stringValue ...... } } \u6a21\u578b\u5d4c\u5957\u89e3\u6790 \u4f7f\u7528\u6cdb\u578b\u7684\u65b9\u5f0f\u4e3a JSON \u7c7b\u62d3\u5c55\u4e24\u4e2a\u89e3\u6790\u65b9\u6cd5\uff0c\u4f7f\u89e3\u6790\u6a21\u578b\u5d4c\u5957\u6613\u5982\u53cd\u638c // \u89e3\u6790\u5355\u4e2a\u6a21\u578b modelValue < T : Modelable >( _ type : T . Type ) -> T // \u89e3\u6790\u6570\u7ec4\u6a21\u578b modelsValue < T : Modelable >( _ type : T . Type ) -> [ T ] \u793a\u4f8b\u4ee3\u7801\uff1a self.address = json[\"address\"].modelValue(AddressModel.self)","title":"\u4e8c\u3001\u5b9a\u4e49\u6a21\u578b"},{"location":"moyaMapper/#_3","text":"\u8fd9\u91cc\u53ea\u8d34\u51fa\u4e3b\u8981\u4ee3\u7801 Normal lxfNetTool . request (. data ( type : . all , size : 10 , index : 1 )) { result in guard let response = result . value else { return } // Models let models = response . mapArray ( MyModel . self ) for model in models { print ( \"id -- \\( model . _id ) \" ) } // Result let ( isSuccess , tipStr ) = response . mapResult () print ( \"isSuccess -- \\( isSuccess ) \" ) print ( \"tipStr -- \\( tipStr ) \" ) // Model /* let model = response.mapObjResult(MyModel.self) */ // \u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u7684\u503c // response.fetchJSONString(keys: []]) // response.fetchJSONString(path: \"\", keys: []) // response.fetchString(path: \"\", keys: []) // \u4f7f\u7528\u81ea\u5b9a\u4e49\u6a21\u578b\u53c2\u6570\u7c7b /* let (result, models) = response.mapArrayResult(MyModel.self, params: { () -> (ModelableParameterType.Type) in return CustomParameter.self }) */ }","title":"\u4e09\u3001\u89e3\u6790"},{"location":"moyaMapper/#_4","text":"result // static var successValue: String { return \"false\" } // static var statusCodeKey: String { return \"error\" } // static var tipStrKey: String { return \"\" } // \u5143\u7956\u7c7b\u578b // \u53c2\u65701\uff1a\u6839\u636estatusCodeKey\u53d6\u51fa\u7684\u503c\u4e0esuccessValue\u662f\u5426\u76f8\u7b49 // \u53c2\u65702\uff1a\u6839\u636etipStrKey\u53d6\u51fa\u7684\u503c result \uff1a ( Bool , String ) fetchString // fetchJSONString(keys: <[JSONSubscriptType]>) 1 \u3001\u901a\u8fc7 keys \u4f20\u9012\u6570\u7ec4 , \u8be5\u6570\u7ec4\u53ef\u4f20\u5165\u7684\u7c7b\u578b\u4e3a Int \u548c String 2 \u3001\u9ed8\u8ba4\u662f\u4ee5 modelKey \u6240\u793a\u8def\u5f84\uff0c\u6765\u83b7\u53d6\u76f8\u5e94\u7684\u6570\u503c\u3002\u5982\u679c modelKey\u975e\u4f60\u6240\u8981\u7528\u7684\u8d77\u59cb\u8def\u5f84 \uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u65b9\u7684\u91cd\u8f7d\u65b9\u6cd5\u91cd\u65b0\u6307\u5b9a\u8def\u5f84 // response.fetchJSONString(path: <String?>, keys: <[JSONSubscriptType]>)","title":"\u8fd4\u56de\u7c7b\u578b\u6ce8\u91ca\uff1a"},{"location":"moyaMapper/#misc","text":"","title":"Misc"},{"location":"moyaMapper/#response","text":"\u5728\u65e0\u7f51\u72b6\u6001\u4e0b\u4f7f\u7528Moya\u53d1\u9001\u8bf7\u6c42\u65f6\uff0cresponse\u4e3anil\uff0c\u5219\u63d2\u4ef6\u5f0f\u6ce8\u5165\u65e0\u6548\u5316\uff0c\u53ef\u4ee5\u5728 catchError \u65b9\u6cd5\u4e2d\u81ea\u5b9a\u4e49 response \u5e76\u8fd4\u56de\u3002\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a rxRequest . catchError { ( error ) -> PrimitiveSequence < SingleTrait , Response > in // \u6355\u83b7\u8bf7\u6c42\u5931\u8d25\uff08\u5982\uff1a\u65e0\u7f51\u72b6\u6001\uff09\uff0c\u81ea\u5b9a\u4e49response let err = error as NSError let resBodyDict = [ \"error\" : \"true\" , \"errMsg\" : err . localizedDescription ] let response = Response ( resBodyDict , statusCode : 203 , parameterType : NetParameter . self ) return Single . just ( response ) }. mapArrayResult ( MyModel . self ). subscribe ( onSuccess : { ( result , models ) in print ( \"isSuccess -- \\( result . 0 ) \" ) print ( \"tipStr -- \\( result . 1 ) \" ) print ( \"models count -- \\( models . count ) \" ) }). disposed ( by : dispseBag ) \u914d\u5408 MoyaSugar \u4f7f\u7528\u66f4\u52a0\u65b9\u4fbf","title":"\u81ea\u5b9a\u4e49Response"},{"location":"rx/","text":"MM-Rx \u00b6 // let rxRequest: Single<Response> // MARK: Rx let rxRequest = lxfNetTool . rx . request (. data ( type : . all , size : 10 , index : 1 )) // Models rxRequest . mapArray ( MyModel . self ). subscribe ( onSuccess : { models in for model in models { print ( \"id -- \\( model . _id ) \" ) } }). disposed ( by : dispseBag ) // Models + Result rxRequest . mapArrayResult ( MyModel . self ). subscribe ( onSuccess : { ( result , models ) in print ( \"isSuccess -- \\( result . 0 ) \" ) print ( \"tipStr -- \\( result . 1 ) \" ) print ( \"models count -- \\( models . count ) \" ) }). disposed ( by : dispseBag ) // \u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u7684\u503c rxRequest . fetchString ( keys : [ 0 , \"_id\" ]). subscribe ( onSuccess : { str in // \u53d6\u7b2c1\u6761\u6570\u636e\u4e2d\u7684'_id'\u5b57\u6bb5\u5bf9\u5e94\u7684\u503c print ( \"str -- \\( str ) \" ) }). disposed ( by : dispseBag )","title":"Rx"},{"location":"rx/#mm-rx","text":"// let rxRequest: Single<Response> // MARK: Rx let rxRequest = lxfNetTool . rx . request (. data ( type : . all , size : 10 , index : 1 )) // Models rxRequest . mapArray ( MyModel . self ). subscribe ( onSuccess : { models in for model in models { print ( \"id -- \\( model . _id ) \" ) } }). disposed ( by : dispseBag ) // Models + Result rxRequest . mapArrayResult ( MyModel . self ). subscribe ( onSuccess : { ( result , models ) in print ( \"isSuccess -- \\( result . 0 ) \" ) print ( \"tipStr -- \\( result . 1 ) \" ) print ( \"models count -- \\( models . count ) \" ) }). disposed ( by : dispseBag ) // \u83b7\u53d6\u6307\u5b9a\u8def\u5f84\u7684\u503c rxRequest . fetchString ( keys : [ 0 , \"_id\" ]). subscribe ( onSuccess : { str in // \u53d6\u7b2c1\u6761\u6570\u636e\u4e2d\u7684'_id'\u5b57\u6bb5\u5bf9\u5e94\u7684\u503c print ( \"str -- \\( str ) \" ) }). disposed ( by : dispseBag )","title":"MM-Rx"}]}